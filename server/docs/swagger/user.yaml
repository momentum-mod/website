paths:
  /user:
    get:
      tags:
        - user
      summary: Retrieves the authenticated user
      parameters:
        - name: expand
          in: query
          description: The names of resources to attach/expand, specified by a comma-separated list of names.
          type: array
          collectionFormat: csv
          items:
            type: string
            enum: [profile, stats]
      responses:
        200:
          description: User is retrieved
          schema:
            $ref: '#/definitions/User'
  /user/profile:
    parameters:
      - name: userID
        in: path
        required: true
        description: ID of the user to find
        type: string
    get:
      tags:
        - user
      summary: Retrieves the authenticated user's profile
      responses:
        200:
          description: User profile is retrieved
          schema:
            $ref: '#/definitions/Profile'
    patch:
      summary: Update the authenticated user's profile
      tags:
        - user
      parameters:
        - in: body
          description: Profile with new values of properties
          schema:
            $ref: '#/definitions/Profile'
      responses:
        204:
          description: User profile is updated
  /user/profile/social/{type}:
    delete:
      summary: Unlinks the social account from the authenticated user
      tags:
        - user
      parameters:
        - name: type
          in: path
          required: true
          description: type of social account to unlink
          type: string
          enum: [twitter, discord, twitch]
      responses:
        200:
          description: The social account is unlinked from the authenticated user
  /user/maps/library:
    get:
      summary: Retrieves a list of maps in the authenticated user's library
      parameters:
        - name: limit
          in: query
          description: The maximum number of results to show
          type: integer
          default: 20
        - name: offset
          in: query
          description: The offset for the results to show
          type: integer
          default: 0
      tags:
        - user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MapLibraryEntries'
    post:
      summary: Adds a new map to the authenticated user's library
      tags:
        - user
      parameters:
        - in: body
          description: An object with the map ID to add to the library
          required: true
          schema:
            type: object
            properties:
              mapID:
                type: integer
      responses:
        200:
          description: The library is updated
          schema:
            type: object
            properties:
              entry:
                type: array
                items:
                  oneOf:
                    - $ref: '#/definitions/MapLibraryEntry'
                    - type: boolean
  /user/maps/library/{mapID}:
    parameters:
      - in: path
        name: mapID
        description: The map's ID
        required: true
        type: integer
    get:
      summary: Checks to see if a map exists in the authenticated user's library
      tags:
        - user
      responses:
        200:
          description: The map exists in the user's library
        404:
          description: The map does not exist in the user's library
    delete:
      summary: Deletes a library entry from the authenticated user's library
      tags:
        - user
      responses:
        200:
          description: The library entry was successfully deleted
  /user/maps/favorites:
    get:
      tags:
        - user
      summary: Retrieves a list of favorited maps for the authenticated user
      parameters:
        - name: limit
          in: query
          description: The maximum number of results to show
          type: integer
          default: 20
        - name: offset
          in: query
          description: The offset for the results to show
          type: integer
          default: 0
      responses:
        200:
          description: The list of map favorites
          schema:
            $ref: '#/definitions/MapFavorites'
  /user/maps/favorites/{mapID}:
    parameters:
      - in: path
        name: mapID
        description: The map's ID
        required: true
        type: integer
    get:
      tags:
        - user
      summary: Retrieves a map favorite for the authenticated user
      responses:
        200:
          description: The map favorite
          schema:
            $ref: '#/definitions/MapFavorite'
        404:
          description: The map does not exist in the user's favorites
    put:
      tags:
        - user
      summary: Adds a specified map to the authenticated user's favorites
      responses:
        204:
          description: The map is favorited
    delete:
      tags:
        - user
      summary: Removes a specified map from the authenticated user's favorites
      responses:
        204:
          description: The map is removed from favorites
  /user/maps/submitted:
    get:
      tags:
        - user
      summary: Retrieves a list of maps submitted by the authenticated user
      parameters:
        - name: limit
          in: query
          description: The maximum number of results to show
          type: integer
          default: 20
        - name: offset
          in: query
          description: The offset for the results to show
          type: integer
          default: 0
        - name: search
          in: query
          description: Filter by partial name match
        - name: expand
          in: query
          description: The names of resources to attach/expand, specified by a comma-separated list of names.
          type: array
          collectionFormat: csv
          items:
            type: string
            enum: [info, submitter, credits]
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Maps'
  /user/maps/submitted/summary:
    get:
      tags:
        - user
      summary: Retrieves a summary of maps submitted by the authenticated user
      responses:
        200:
          description: An array of objects for each map status count
          schema:
            type: array
            items:
              type: object
              properties:
                statusFlag:
                  type: integer
                statusCount:
                  type: integer
  /user/activities:
    get:
      summary: Retrieves a list of authenticated user's activities
      tags:
        - user
      parameters:
        - name: limit
          in: query
          description: The maximum number of results to show
          type: integer
          default: 10
        - name: offset
          in: query
          description: The offset for the results to show
          type: integer
          default: 0
        - name: type
          in: query
          description: Filter by activity type
        - name: data
          in: query
          description: Filter by activity data
        - name: expand
          in: query
          description: The names of resources to attach/expand, specified by a comma-separated list of names.
          type: array
          collectionFormat: csv
          items:
            type: string
            enum: [user]
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Activities'
  /user/follow:
    post:
      summary: Adds a user to the local user's follow list
      tags:
        - user
      parameters:
        - in: body
          required: true
          description: An object containing the ID of the user to follow
          type: object
          properties:
            userID:
              type: string
              description: The ID of the user to follow
      responses:
        200:
          description: OK
          schema:
            $ref: '#/defintions/UserFollow'
  /user/follow/{userID}:
    parameters:
      - name: userID
        in: path
        required: true
        description: ID of the user in question
        type: string
    get:
      summary: Checks the followhood relationship of the given user and the local user
      tags:
        - user
      responses:
        200:
          description: Object with two keys, local = local user's followship of given user, target = target's relationship to local user, if the key doesn't exist, the relationship doesn't
          schema:
            type: object
            properties:
              local:
                $ref: '#/definitions/UserFollow'
              target:
                $ref: '#/definitions/UserFollow'
        404:
          description: The user is not found
    patch:
      summary: Updates the following status
      tags:
        - user
      parameters:
        - in: body
          required: true
          description: What activities the player wants to be notified of from the given user
          type: object
          properties:
            notifyOn:
              type: integer
      responses:
        200:
          description: OK
    delete:
      summary: Removes the user from the local user's follow list
      tags:
        - user
      responses:
        200:
          description: OK
  /user/activities/followed:
     get:
       summary: Retrieves a list of activities from followed users
       tags:
         - user
       parameters:
         - name: limit
           in: query
           description: The maximum number of results to show
           type: integer
           default: 10
         - name: offset
           in: query
           description: The offset for the results to show
           type: integer
           default: 0
         - name: type
           in: query
           description: Filter by activity type
         - name: data
           in: query
           description: Filter by activity data
       responses:
         200:
           description: OK
           schema:
             $ref: '#/definitions/Activities'
  /user/notifications:
    get:
      summary: Retrieves a list of notifications for the authenticated user
      tags:
        - user
      parameters:
        - name: limit
          in: query
          description: The maximum number of results to show
          type: integer
          default: 10
        - name: offset
          in: query
          description: The offset for the results to show
          type: integer
          default: 0
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notifications'
  /user/notifications/{notifID}:
    patch:
      summary: Updates the notification
        (Usually used to mark the notification as read/unread)
      tags:
        - user
      responses:
        204:
          description: Notification is updated
    delete:
      summary: Deletes the notification
      tags:
        - user
      responses:
        200:
          description: Notification is deleted
definitions:
  MapLibraryEntry:
    properties:
      id:
        type: integer
        readOnly: true
      userID:
        type: string
        readOnly: true
      mapID:
        type: integer
        readOnly: true
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      map:
        $ref: '#/definitions/Map'
  MapLibraryEntries:
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/MapLibraryEntry'
  MapFavorite:
    properties:
      id:
        type: integer
        readOnly: true
      userID:
        type: string
        readOnly: true
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      map:
        $ref: '#/definitions/Map'
  MapFavorites:
    properties:
      favorites:
        type: array
        items:
          $ref: '#/definitions/MapFavorite'
  Notification:
    properties:
      id:
        type: integer
        readOnly: true
      forUserID:
        type: string
        readOnly: true
      activityID:
        type: integer
        readOnly: true
      read:
        type: boolean
        description: whether or not the notification has been read
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      activity:
        $ref: '#/definitions/Activity'
  Notifications:
    properties:
      count:
        type: integer
      notifications:
        type: array
        items:
          $ref: '#/definitions/Notification'
