
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"
export type * from '../models'
export type * from './prismaNamespace'
export const Decimal = runtime.Decimal
export const ModelName = {
  User: 'User',
  Profile: 'Profile',
  UserAuth: 'UserAuth',
  UserStats: 'UserStats',
  DeletedUser: 'DeletedUser',
  Report: 'Report',
  Activity: 'Activity',
  Follow: 'Follow',
  Notification: 'Notification',
  MapNotify: 'MapNotify',
  MMap: 'MMap',
  MapVersion: 'MapVersion',
  MapCredit: 'MapCredit',
  MapFavorite: 'MapFavorite',
  MapInfo: 'MapInfo',
  MapStats: 'MapStats',
  MapTestInvite: 'MapTestInvite',
  MapSubmission: 'MapSubmission',
  MapSubmissionDate: 'MapSubmissionDate',
  MapReview: 'MapReview',
  MapReviewComment: 'MapReviewComment',
  MapReviewStats: 'MapReviewStats',
  Leaderboard: 'Leaderboard',
  LeaderboardRun: 'LeaderboardRun',
  PastRun: 'PastRun',
  AdminActivity: 'AdminActivity',
  Config: 'Config'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  roles: 'roles',
  bans: 'bans',
  steamID: 'steamID',
  alias: 'alias',
  avatar: 'avatar',
  country: 'country',
  createdAt: 'createdAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const ProfileScalarFieldEnum = {
  bio: 'bio',
  socials: 'socials',
  userID: 'userID'
} as const

export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


export const UserAuthScalarFieldEnum = {
  refreshToken: 'refreshToken',
  userID: 'userID'
} as const

export type UserAuthScalarFieldEnum = (typeof UserAuthScalarFieldEnum)[keyof typeof UserAuthScalarFieldEnum]


export const UserStatsScalarFieldEnum = {
  totalJumps: 'totalJumps',
  totalStrafes: 'totalStrafes',
  level: 'level',
  cosXP: 'cosXP',
  mapsCompleted: 'mapsCompleted',
  runsSubmitted: 'runsSubmitted',
  userID: 'userID'
} as const

export type UserStatsScalarFieldEnum = (typeof UserStatsScalarFieldEnum)[keyof typeof UserStatsScalarFieldEnum]


export const DeletedUserScalarFieldEnum = {
  steamIDHash: 'steamIDHash'
} as const

export type DeletedUserScalarFieldEnum = (typeof DeletedUserScalarFieldEnum)[keyof typeof DeletedUserScalarFieldEnum]


export const ReportScalarFieldEnum = {
  id: 'id',
  type: 'type',
  data: 'data',
  category: 'category',
  message: 'message',
  resolved: 'resolved',
  resolutionMessage: 'resolutionMessage',
  submitterID: 'submitterID',
  resolverID: 'resolverID',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


export const ActivityScalarFieldEnum = {
  id: 'id',
  type: 'type',
  data: 'data',
  userID: 'userID',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ActivityScalarFieldEnum = (typeof ActivityScalarFieldEnum)[keyof typeof ActivityScalarFieldEnum]


export const FollowScalarFieldEnum = {
  notifyOn: 'notifyOn',
  followedID: 'followedID',
  followeeID: 'followeeID',
  createdAt: 'createdAt'
} as const

export type FollowScalarFieldEnum = (typeof FollowScalarFieldEnum)[keyof typeof FollowScalarFieldEnum]


export const NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  isRead: 'isRead',
  json: 'json',
  notifiedUserID: 'notifiedUserID',
  userID: 'userID',
  mapID: 'mapID',
  reviewID: 'reviewID',
  reviewCommentID: 'reviewCommentID',
  createdAt: 'createdAt'
} as const

export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


export const MapNotifyScalarFieldEnum = {
  notifyOn: 'notifyOn',
  mapID: 'mapID',
  userID: 'userID',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MapNotifyScalarFieldEnum = (typeof MapNotifyScalarFieldEnum)[keyof typeof MapNotifyScalarFieldEnum]


export const MMapScalarFieldEnum = {
  id: 'id',
  name: 'name',
  status: 'status',
  images: 'images',
  submitterID: 'submitterID',
  currentVersionID: 'currentVersionID',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MMapScalarFieldEnum = (typeof MMapScalarFieldEnum)[keyof typeof MMapScalarFieldEnum]


export const MapVersionScalarFieldEnum = {
  id: 'id',
  versionNum: 'versionNum',
  changelog: 'changelog',
  bspHash: 'bspHash',
  zoneHash: 'zoneHash',
  bspDownloadId: 'bspDownloadId',
  vmfDownloadId: 'vmfDownloadId',
  zones: 'zones',
  submitterID: 'submitterID',
  mapID: 'mapID',
  createdAt: 'createdAt'
} as const

export type MapVersionScalarFieldEnum = (typeof MapVersionScalarFieldEnum)[keyof typeof MapVersionScalarFieldEnum]


export const MapCreditScalarFieldEnum = {
  type: 'type',
  description: 'description',
  mapID: 'mapID',
  userID: 'userID'
} as const

export type MapCreditScalarFieldEnum = (typeof MapCreditScalarFieldEnum)[keyof typeof MapCreditScalarFieldEnum]


export const MapFavoriteScalarFieldEnum = {
  id: 'id',
  mapID: 'mapID',
  userID: 'userID',
  createdAt: 'createdAt'
} as const

export type MapFavoriteScalarFieldEnum = (typeof MapFavoriteScalarFieldEnum)[keyof typeof MapFavoriteScalarFieldEnum]


export const MapInfoScalarFieldEnum = {
  description: 'description',
  youtubeID: 'youtubeID',
  creationDate: 'creationDate',
  approvedDate: 'approvedDate',
  requiredGames: 'requiredGames',
  mapID: 'mapID'
} as const

export type MapInfoScalarFieldEnum = (typeof MapInfoScalarFieldEnum)[keyof typeof MapInfoScalarFieldEnum]


export const MapStatsScalarFieldEnum = {
  reviews: 'reviews',
  subscriptions: 'subscriptions',
  plays: 'plays',
  favorites: 'favorites',
  completions: 'completions',
  uniqueCompletions: 'uniqueCompletions',
  timePlayed: 'timePlayed',
  mapID: 'mapID'
} as const

export type MapStatsScalarFieldEnum = (typeof MapStatsScalarFieldEnum)[keyof typeof MapStatsScalarFieldEnum]


export const MapTestInviteScalarFieldEnum = {
  mapID: 'mapID',
  userID: 'userID',
  state: 'state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MapTestInviteScalarFieldEnum = (typeof MapTestInviteScalarFieldEnum)[keyof typeof MapTestInviteScalarFieldEnum]


export const MapSubmissionScalarFieldEnum = {
  mapID: 'mapID',
  type: 'type',
  suggestions: 'suggestions',
  placeholders: 'placeholders',
  discordReviewThread: 'discordReviewThread'
} as const

export type MapSubmissionScalarFieldEnum = (typeof MapSubmissionScalarFieldEnum)[keyof typeof MapSubmissionScalarFieldEnum]


export const MapSubmissionDateScalarFieldEnum = {
  id: 'id',
  status: 'status',
  date: 'date',
  userID: 'userID',
  submissionMapID: 'submissionMapID'
} as const

export type MapSubmissionDateScalarFieldEnum = (typeof MapSubmissionDateScalarFieldEnum)[keyof typeof MapSubmissionDateScalarFieldEnum]


export const MapReviewScalarFieldEnum = {
  id: 'id',
  mainText: 'mainText',
  suggestions: 'suggestions',
  editHistory: 'editHistory',
  imageIDs: 'imageIDs',
  mapID: 'mapID',
  reviewerID: 'reviewerID',
  resolved: 'resolved',
  resolverID: 'resolverID',
  approves: 'approves',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MapReviewScalarFieldEnum = (typeof MapReviewScalarFieldEnum)[keyof typeof MapReviewScalarFieldEnum]


export const MapReviewCommentScalarFieldEnum = {
  id: 'id',
  text: 'text',
  userID: 'userID',
  reviewID: 'reviewID',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MapReviewCommentScalarFieldEnum = (typeof MapReviewCommentScalarFieldEnum)[keyof typeof MapReviewCommentScalarFieldEnum]


export const MapReviewStatsScalarFieldEnum = {
  mapID: 'mapID',
  total: 'total',
  approvals: 'approvals',
  resolved: 'resolved',
  unresolved: 'unresolved'
} as const

export type MapReviewStatsScalarFieldEnum = (typeof MapReviewStatsScalarFieldEnum)[keyof typeof MapReviewStatsScalarFieldEnum]


export const LeaderboardScalarFieldEnum = {
  mapID: 'mapID',
  gamemode: 'gamemode',
  trackType: 'trackType',
  trackNum: 'trackNum',
  style: 'style',
  tier: 'tier',
  linear: 'linear',
  type: 'type',
  tags: 'tags'
} as const

export type LeaderboardScalarFieldEnum = (typeof LeaderboardScalarFieldEnum)[keyof typeof LeaderboardScalarFieldEnum]


export const LeaderboardRunScalarFieldEnum = {
  userID: 'userID',
  mapID: 'mapID',
  gamemode: 'gamemode',
  trackType: 'trackType',
  trackNum: 'trackNum',
  style: 'style',
  time: 'time',
  splits: 'splits',
  replayHash: 'replayHash',
  flags: 'flags',
  rank: 'rank',
  createdAt: 'createdAt',
  pastRunID: 'pastRunID'
} as const

export type LeaderboardRunScalarFieldEnum = (typeof LeaderboardRunScalarFieldEnum)[keyof typeof LeaderboardRunScalarFieldEnum]


export const PastRunScalarFieldEnum = {
  id: 'id',
  userID: 'userID',
  mapID: 'mapID',
  gamemode: 'gamemode',
  trackType: 'trackType',
  trackNum: 'trackNum',
  style: 'style',
  time: 'time',
  flags: 'flags',
  createdAt: 'createdAt'
} as const

export type PastRunScalarFieldEnum = (typeof PastRunScalarFieldEnum)[keyof typeof PastRunScalarFieldEnum]


export const AdminActivityScalarFieldEnum = {
  id: 'id',
  comment: 'comment',
  type: 'type',
  target: 'target',
  oldData: 'oldData',
  newData: 'newData',
  userID: 'userID',
  createdAt: 'createdAt'
} as const

export type AdminActivityScalarFieldEnum = (typeof AdminActivityScalarFieldEnum)[keyof typeof AdminActivityScalarFieldEnum]


export const ConfigScalarFieldEnum = {
  id: 'id',
  value: 'value'
} as const

export type ConfigScalarFieldEnum = (typeof ConfigScalarFieldEnum)[keyof typeof ConfigScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const JsonNullValueInput = {
  JsonNull: JsonNull
} as const

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

