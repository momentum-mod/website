
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  id: number | null
  roles: number | null
  bans: number | null
  steamID: number | null
}

export type UserSumAggregateOutputType = {
  id: number | null
  roles: number | null
  bans: number | null
  steamID: bigint | null
}

export type UserMinAggregateOutputType = {
  id: number | null
  roles: number | null
  bans: number | null
  steamID: bigint | null
  alias: string | null
  avatar: string | null
  country: string | null
  createdAt: Date | null
}

export type UserMaxAggregateOutputType = {
  id: number | null
  roles: number | null
  bans: number | null
  steamID: bigint | null
  alias: string | null
  avatar: string | null
  country: string | null
  createdAt: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  roles: number
  bans: number
  steamID: number
  alias: number
  avatar: number
  country: number
  createdAt: number
  _all: number
}


export type UserAvgAggregateInputType = {
  id?: true
  roles?: true
  bans?: true
  steamID?: true
}

export type UserSumAggregateInputType = {
  id?: true
  roles?: true
  bans?: true
  steamID?: true
}

export type UserMinAggregateInputType = {
  id?: true
  roles?: true
  bans?: true
  steamID?: true
  alias?: true
  avatar?: true
  country?: true
  createdAt?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  roles?: true
  bans?: true
  steamID?: true
  alias?: true
  avatar?: true
  country?: true
  createdAt?: true
}

export type UserCountAggregateInputType = {
  id?: true
  roles?: true
  bans?: true
  steamID?: true
  alias?: true
  avatar?: true
  country?: true
  createdAt?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: number
  roles: number
  bans: number
  steamID: bigint | null
  alias: string
  avatar: string | null
  country: string | null
  createdAt: Date
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  >



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  roles?: Prisma.IntFilter<"User"> | number
  bans?: Prisma.IntFilter<"User"> | number
  steamID?: Prisma.BigIntNullableFilter<"User"> | bigint | number | null
  alias?: Prisma.StringFilter<"User"> | string
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  country?: Prisma.StringNullableFilter<"User"> | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  userAuth?: Prisma.XOR<Prisma.UserAuthNullableScalarRelationFilter, Prisma.UserAuthWhereInput> | null
  profile?: Prisma.XOR<Prisma.ProfileNullableScalarRelationFilter, Prisma.ProfileWhereInput> | null
  userStats?: Prisma.XOR<Prisma.UserStatsNullableScalarRelationFilter, Prisma.UserStatsWhereInput> | null
  submittedMaps?: Prisma.MMapListRelationFilter
  submittedMapDates?: Prisma.MapSubmissionDateListRelationFilter
  submittedMapVersions?: Prisma.MapVersionListRelationFilter
  mapCredits?: Prisma.MapCreditListRelationFilter
  mapFavorites?: Prisma.MapFavoriteListRelationFilter
  activities?: Prisma.ActivityListRelationFilter
  follows?: Prisma.FollowListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  mapNotifies?: Prisma.MapNotifyListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  notifsAbout?: Prisma.NotificationListRelationFilter
  leaderboardRuns?: Prisma.LeaderboardRunListRelationFilter
  pastRuns?: Prisma.PastRunListRelationFilter
  reportSubmitted?: Prisma.ReportListRelationFilter
  reportResolved?: Prisma.ReportListRelationFilter
  testInvites?: Prisma.MapTestInviteListRelationFilter
  reviewsSubmitted?: Prisma.MapReviewListRelationFilter
  reviewsResolved?: Prisma.MapReviewListRelationFilter
  reviewComments?: Prisma.MapReviewCommentListRelationFilter
  adminActivities?: Prisma.AdminActivityListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrderInput | Prisma.SortOrder
  alias?: Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  userAuth?: Prisma.UserAuthOrderByWithRelationInput
  profile?: Prisma.ProfileOrderByWithRelationInput
  userStats?: Prisma.UserStatsOrderByWithRelationInput
  submittedMaps?: Prisma.MMapOrderByRelationAggregateInput
  submittedMapDates?: Prisma.MapSubmissionDateOrderByRelationAggregateInput
  submittedMapVersions?: Prisma.MapVersionOrderByRelationAggregateInput
  mapCredits?: Prisma.MapCreditOrderByRelationAggregateInput
  mapFavorites?: Prisma.MapFavoriteOrderByRelationAggregateInput
  activities?: Prisma.ActivityOrderByRelationAggregateInput
  follows?: Prisma.FollowOrderByRelationAggregateInput
  followers?: Prisma.FollowOrderByRelationAggregateInput
  mapNotifies?: Prisma.MapNotifyOrderByRelationAggregateInput
  notifications?: Prisma.NotificationOrderByRelationAggregateInput
  notifsAbout?: Prisma.NotificationOrderByRelationAggregateInput
  leaderboardRuns?: Prisma.LeaderboardRunOrderByRelationAggregateInput
  pastRuns?: Prisma.PastRunOrderByRelationAggregateInput
  reportSubmitted?: Prisma.ReportOrderByRelationAggregateInput
  reportResolved?: Prisma.ReportOrderByRelationAggregateInput
  testInvites?: Prisma.MapTestInviteOrderByRelationAggregateInput
  reviewsSubmitted?: Prisma.MapReviewOrderByRelationAggregateInput
  reviewsResolved?: Prisma.MapReviewOrderByRelationAggregateInput
  reviewComments?: Prisma.MapReviewCommentOrderByRelationAggregateInput
  adminActivities?: Prisma.AdminActivityOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  steamID?: bigint | number
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  roles?: Prisma.IntFilter<"User"> | number
  bans?: Prisma.IntFilter<"User"> | number
  alias?: Prisma.StringFilter<"User"> | string
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  country?: Prisma.StringNullableFilter<"User"> | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  userAuth?: Prisma.XOR<Prisma.UserAuthNullableScalarRelationFilter, Prisma.UserAuthWhereInput> | null
  profile?: Prisma.XOR<Prisma.ProfileNullableScalarRelationFilter, Prisma.ProfileWhereInput> | null
  userStats?: Prisma.XOR<Prisma.UserStatsNullableScalarRelationFilter, Prisma.UserStatsWhereInput> | null
  submittedMaps?: Prisma.MMapListRelationFilter
  submittedMapDates?: Prisma.MapSubmissionDateListRelationFilter
  submittedMapVersions?: Prisma.MapVersionListRelationFilter
  mapCredits?: Prisma.MapCreditListRelationFilter
  mapFavorites?: Prisma.MapFavoriteListRelationFilter
  activities?: Prisma.ActivityListRelationFilter
  follows?: Prisma.FollowListRelationFilter
  followers?: Prisma.FollowListRelationFilter
  mapNotifies?: Prisma.MapNotifyListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  notifsAbout?: Prisma.NotificationListRelationFilter
  leaderboardRuns?: Prisma.LeaderboardRunListRelationFilter
  pastRuns?: Prisma.PastRunListRelationFilter
  reportSubmitted?: Prisma.ReportListRelationFilter
  reportResolved?: Prisma.ReportListRelationFilter
  testInvites?: Prisma.MapTestInviteListRelationFilter
  reviewsSubmitted?: Prisma.MapReviewListRelationFilter
  reviewsResolved?: Prisma.MapReviewListRelationFilter
  reviewComments?: Prisma.MapReviewCommentListRelationFilter
  adminActivities?: Prisma.AdminActivityListRelationFilter
}, "id" | "steamID">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrderInput | Prisma.SortOrder
  alias?: Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"User"> | number
  roles?: Prisma.IntWithAggregatesFilter<"User"> | number
  bans?: Prisma.IntWithAggregatesFilter<"User"> | number
  steamID?: Prisma.BigIntNullableWithAggregatesFilter<"User"> | bigint | number | null
  alias?: Prisma.StringWithAggregatesFilter<"User"> | string
  avatar?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  country?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
}

export type UserCreateInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserUpdateInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateManyInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
}

export type UserUpdateManyMutationInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrder
  alias?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrder
  alias?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrder
  alias?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  country?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roles?: Prisma.SortOrder
  bans?: Prisma.SortOrder
  steamID?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableBigIntFieldUpdateOperationsInput = {
  set?: bigint | number | null
  increment?: bigint | number
  decrement?: bigint | number
  multiply?: bigint | number
  divide?: bigint | number
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type UserCreateNestedOneWithoutProfileInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProfileInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutProfileNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProfileInput
  upsert?: Prisma.UserUpsertWithoutProfileInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutProfileInput, Prisma.UserUpdateWithoutProfileInput>, Prisma.UserUncheckedUpdateWithoutProfileInput>
}

export type UserCreateNestedOneWithoutUserAuthInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutUserAuthInput, Prisma.UserUncheckedCreateWithoutUserAuthInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutUserAuthInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutUserAuthNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutUserAuthInput, Prisma.UserUncheckedCreateWithoutUserAuthInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutUserAuthInput
  upsert?: Prisma.UserUpsertWithoutUserAuthInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutUserAuthInput, Prisma.UserUpdateWithoutUserAuthInput>, Prisma.UserUncheckedUpdateWithoutUserAuthInput>
}

export type UserCreateNestedOneWithoutUserStatsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutUserStatsInput, Prisma.UserUncheckedCreateWithoutUserStatsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutUserStatsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutUserStatsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutUserStatsInput, Prisma.UserUncheckedCreateWithoutUserStatsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutUserStatsInput
  upsert?: Prisma.UserUpsertWithoutUserStatsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutUserStatsInput, Prisma.UserUpdateWithoutUserStatsInput>, Prisma.UserUncheckedUpdateWithoutUserStatsInput>
}

export type UserCreateNestedOneWithoutReportSubmittedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReportSubmittedInput, Prisma.UserUncheckedCreateWithoutReportSubmittedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportSubmittedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutReportResolvedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReportResolvedInput, Prisma.UserUncheckedCreateWithoutReportResolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportResolvedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutReportSubmittedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReportSubmittedInput, Prisma.UserUncheckedCreateWithoutReportSubmittedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportSubmittedInput
  upsert?: Prisma.UserUpsertWithoutReportSubmittedInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReportSubmittedInput, Prisma.UserUpdateWithoutReportSubmittedInput>, Prisma.UserUncheckedUpdateWithoutReportSubmittedInput>
}

export type UserUpdateOneWithoutReportResolvedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReportResolvedInput, Prisma.UserUncheckedCreateWithoutReportResolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportResolvedInput
  upsert?: Prisma.UserUpsertWithoutReportResolvedInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReportResolvedInput, Prisma.UserUpdateWithoutReportResolvedInput>, Prisma.UserUncheckedUpdateWithoutReportResolvedInput>
}

export type UserCreateNestedOneWithoutActivitiesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutActivitiesInput, Prisma.UserUncheckedCreateWithoutActivitiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutActivitiesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutActivitiesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutActivitiesInput, Prisma.UserUncheckedCreateWithoutActivitiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutActivitiesInput
  upsert?: Prisma.UserUpsertWithoutActivitiesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutActivitiesInput, Prisma.UserUpdateWithoutActivitiesInput>, Prisma.UserUncheckedUpdateWithoutActivitiesInput>
}

export type UserCreateNestedOneWithoutFollowersInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowersInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutFollowsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowsInput, Prisma.UserUncheckedCreateWithoutFollowsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutFollowersNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowersInput
  upsert?: Prisma.UserUpsertWithoutFollowersInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutFollowersInput, Prisma.UserUpdateWithoutFollowersInput>, Prisma.UserUncheckedUpdateWithoutFollowersInput>
}

export type UserUpdateOneRequiredWithoutFollowsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutFollowsInput, Prisma.UserUncheckedCreateWithoutFollowsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutFollowsInput
  upsert?: Prisma.UserUpsertWithoutFollowsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutFollowsInput, Prisma.UserUpdateWithoutFollowsInput>, Prisma.UserUncheckedUpdateWithoutFollowsInput>
}

export type UserCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutNotifsAboutInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotifsAboutInput, Prisma.UserUncheckedCreateWithoutNotifsAboutInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotifsAboutInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput
  upsert?: Prisma.UserUpsertWithoutNotificationsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutNotificationsInput, Prisma.UserUpdateWithoutNotificationsInput>, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
}

export type UserUpdateOneWithoutNotifsAboutNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotifsAboutInput, Prisma.UserUncheckedCreateWithoutNotifsAboutInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotifsAboutInput
  upsert?: Prisma.UserUpsertWithoutNotifsAboutInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutNotifsAboutInput, Prisma.UserUpdateWithoutNotifsAboutInput>, Prisma.UserUncheckedUpdateWithoutNotifsAboutInput>
}

export type UserCreateNestedOneWithoutMapNotifiesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapNotifiesInput, Prisma.UserUncheckedCreateWithoutMapNotifiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapNotifiesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutMapNotifiesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapNotifiesInput, Prisma.UserUncheckedCreateWithoutMapNotifiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapNotifiesInput
  upsert?: Prisma.UserUpsertWithoutMapNotifiesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutMapNotifiesInput, Prisma.UserUpdateWithoutMapNotifiesInput>, Prisma.UserUncheckedUpdateWithoutMapNotifiesInput>
}

export type UserCreateNestedOneWithoutSubmittedMapsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutSubmittedMapsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapsInput
  upsert?: Prisma.UserUpsertWithoutSubmittedMapsInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSubmittedMapsInput, Prisma.UserUpdateWithoutSubmittedMapsInput>, Prisma.UserUncheckedUpdateWithoutSubmittedMapsInput>
}

export type UserCreateNestedOneWithoutSubmittedMapVersionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapVersionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapVersionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutSubmittedMapVersionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapVersionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapVersionsInput
  upsert?: Prisma.UserUpsertWithoutSubmittedMapVersionsInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSubmittedMapVersionsInput, Prisma.UserUpdateWithoutSubmittedMapVersionsInput>, Prisma.UserUncheckedUpdateWithoutSubmittedMapVersionsInput>
}

export type UserCreateNestedOneWithoutMapCreditsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapCreditsInput, Prisma.UserUncheckedCreateWithoutMapCreditsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapCreditsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutMapCreditsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapCreditsInput, Prisma.UserUncheckedCreateWithoutMapCreditsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapCreditsInput
  upsert?: Prisma.UserUpsertWithoutMapCreditsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutMapCreditsInput, Prisma.UserUpdateWithoutMapCreditsInput>, Prisma.UserUncheckedUpdateWithoutMapCreditsInput>
}

export type UserCreateNestedOneWithoutMapFavoritesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapFavoritesInput, Prisma.UserUncheckedCreateWithoutMapFavoritesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapFavoritesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutMapFavoritesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMapFavoritesInput, Prisma.UserUncheckedCreateWithoutMapFavoritesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMapFavoritesInput
  upsert?: Prisma.UserUpsertWithoutMapFavoritesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutMapFavoritesInput, Prisma.UserUpdateWithoutMapFavoritesInput>, Prisma.UserUncheckedUpdateWithoutMapFavoritesInput>
}

export type UserCreateNestedOneWithoutTestInvitesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTestInvitesInput, Prisma.UserUncheckedCreateWithoutTestInvitesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTestInvitesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutTestInvitesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTestInvitesInput, Prisma.UserUncheckedCreateWithoutTestInvitesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTestInvitesInput
  upsert?: Prisma.UserUpsertWithoutTestInvitesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutTestInvitesInput, Prisma.UserUpdateWithoutTestInvitesInput>, Prisma.UserUncheckedUpdateWithoutTestInvitesInput>
}

export type UserCreateNestedOneWithoutSubmittedMapDatesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedCreateWithoutSubmittedMapDatesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapDatesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutSubmittedMapDatesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedCreateWithoutSubmittedMapDatesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmittedMapDatesInput
  upsert?: Prisma.UserUpsertWithoutSubmittedMapDatesInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSubmittedMapDatesInput, Prisma.UserUpdateWithoutSubmittedMapDatesInput>, Prisma.UserUncheckedUpdateWithoutSubmittedMapDatesInput>
}

export type UserCreateNestedOneWithoutReviewsSubmittedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsSubmittedInput, Prisma.UserUncheckedCreateWithoutReviewsSubmittedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsSubmittedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutReviewsResolvedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsResolvedInput, Prisma.UserUncheckedCreateWithoutReviewsResolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsResolvedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutReviewsSubmittedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsSubmittedInput, Prisma.UserUncheckedCreateWithoutReviewsSubmittedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsSubmittedInput
  upsert?: Prisma.UserUpsertWithoutReviewsSubmittedInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReviewsSubmittedInput, Prisma.UserUpdateWithoutReviewsSubmittedInput>, Prisma.UserUncheckedUpdateWithoutReviewsSubmittedInput>
}

export type UserUpdateOneWithoutReviewsResolvedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsResolvedInput, Prisma.UserUncheckedCreateWithoutReviewsResolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsResolvedInput
  upsert?: Prisma.UserUpsertWithoutReviewsResolvedInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReviewsResolvedInput, Prisma.UserUpdateWithoutReviewsResolvedInput>, Prisma.UserUncheckedUpdateWithoutReviewsResolvedInput>
}

export type UserCreateNestedOneWithoutReviewCommentsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewCommentsInput, Prisma.UserUncheckedCreateWithoutReviewCommentsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewCommentsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutReviewCommentsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewCommentsInput, Prisma.UserUncheckedCreateWithoutReviewCommentsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewCommentsInput
  upsert?: Prisma.UserUpsertWithoutReviewCommentsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReviewCommentsInput, Prisma.UserUpdateWithoutReviewCommentsInput>, Prisma.UserUncheckedUpdateWithoutReviewCommentsInput>
}

export type UserCreateNestedOneWithoutLeaderboardRunsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLeaderboardRunsInput, Prisma.UserUncheckedCreateWithoutLeaderboardRunsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLeaderboardRunsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutLeaderboardRunsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLeaderboardRunsInput, Prisma.UserUncheckedCreateWithoutLeaderboardRunsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLeaderboardRunsInput
  upsert?: Prisma.UserUpsertWithoutLeaderboardRunsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutLeaderboardRunsInput, Prisma.UserUpdateWithoutLeaderboardRunsInput>, Prisma.UserUncheckedUpdateWithoutLeaderboardRunsInput>
}

export type UserCreateNestedOneWithoutPastRunsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPastRunsInput, Prisma.UserUncheckedCreateWithoutPastRunsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPastRunsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutPastRunsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPastRunsInput, Prisma.UserUncheckedCreateWithoutPastRunsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPastRunsInput
  upsert?: Prisma.UserUpsertWithoutPastRunsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutPastRunsInput, Prisma.UserUpdateWithoutPastRunsInput>, Prisma.UserUncheckedUpdateWithoutPastRunsInput>
}

export type UserCreateNestedOneWithoutAdminActivitiesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAdminActivitiesInput, Prisma.UserUncheckedCreateWithoutAdminActivitiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAdminActivitiesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutAdminActivitiesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAdminActivitiesInput, Prisma.UserUncheckedCreateWithoutAdminActivitiesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAdminActivitiesInput
  upsert?: Prisma.UserUpsertWithoutAdminActivitiesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAdminActivitiesInput, Prisma.UserUpdateWithoutAdminActivitiesInput>, Prisma.UserUncheckedUpdateWithoutAdminActivitiesInput>
}

export type UserCreateWithoutProfileInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutProfileInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutProfileInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
}

export type UserUpsertWithoutProfileInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutProfileInput, Prisma.UserUncheckedUpdateWithoutProfileInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutProfileInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutProfileInput, Prisma.UserUncheckedUpdateWithoutProfileInput>
}

export type UserUpdateWithoutProfileInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutProfileInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutUserAuthInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutUserAuthInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutUserAuthInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutUserAuthInput, Prisma.UserUncheckedCreateWithoutUserAuthInput>
}

export type UserUpsertWithoutUserAuthInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutUserAuthInput, Prisma.UserUncheckedUpdateWithoutUserAuthInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutUserAuthInput, Prisma.UserUncheckedCreateWithoutUserAuthInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutUserAuthInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutUserAuthInput, Prisma.UserUncheckedUpdateWithoutUserAuthInput>
}

export type UserUpdateWithoutUserAuthInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutUserAuthInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutUserStatsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutUserStatsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutUserStatsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutUserStatsInput, Prisma.UserUncheckedCreateWithoutUserStatsInput>
}

export type UserUpsertWithoutUserStatsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutUserStatsInput, Prisma.UserUncheckedUpdateWithoutUserStatsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutUserStatsInput, Prisma.UserUncheckedCreateWithoutUserStatsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutUserStatsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutUserStatsInput, Prisma.UserUncheckedUpdateWithoutUserStatsInput>
}

export type UserUpdateWithoutUserStatsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutUserStatsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutReportSubmittedInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutReportSubmittedInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutReportSubmittedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReportSubmittedInput, Prisma.UserUncheckedCreateWithoutReportSubmittedInput>
}

export type UserCreateWithoutReportResolvedInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutReportResolvedInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutReportResolvedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReportResolvedInput, Prisma.UserUncheckedCreateWithoutReportResolvedInput>
}

export type UserUpsertWithoutReportSubmittedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReportSubmittedInput, Prisma.UserUncheckedUpdateWithoutReportSubmittedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReportSubmittedInput, Prisma.UserUncheckedCreateWithoutReportSubmittedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReportSubmittedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReportSubmittedInput, Prisma.UserUncheckedUpdateWithoutReportSubmittedInput>
}

export type UserUpdateWithoutReportSubmittedInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutReportSubmittedInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserUpsertWithoutReportResolvedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReportResolvedInput, Prisma.UserUncheckedUpdateWithoutReportResolvedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReportResolvedInput, Prisma.UserUncheckedCreateWithoutReportResolvedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReportResolvedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReportResolvedInput, Prisma.UserUncheckedUpdateWithoutReportResolvedInput>
}

export type UserUpdateWithoutReportResolvedInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutReportResolvedInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutActivitiesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutActivitiesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutActivitiesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutActivitiesInput, Prisma.UserUncheckedCreateWithoutActivitiesInput>
}

export type UserUpsertWithoutActivitiesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutActivitiesInput, Prisma.UserUncheckedUpdateWithoutActivitiesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutActivitiesInput, Prisma.UserUncheckedCreateWithoutActivitiesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutActivitiesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutActivitiesInput, Prisma.UserUncheckedUpdateWithoutActivitiesInput>
}

export type UserUpdateWithoutActivitiesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutActivitiesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutFollowersInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutFollowersInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutFollowersInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
}

export type UserCreateWithoutFollowsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutFollowsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutFollowsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowsInput, Prisma.UserUncheckedCreateWithoutFollowsInput>
}

export type UserUpsertWithoutFollowersInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutFollowersInput, Prisma.UserUncheckedUpdateWithoutFollowersInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowersInput, Prisma.UserUncheckedCreateWithoutFollowersInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutFollowersInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutFollowersInput, Prisma.UserUncheckedUpdateWithoutFollowersInput>
}

export type UserUpdateWithoutFollowersInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutFollowersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserUpsertWithoutFollowsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutFollowsInput, Prisma.UserUncheckedUpdateWithoutFollowsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutFollowsInput, Prisma.UserUncheckedCreateWithoutFollowsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutFollowsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutFollowsInput, Prisma.UserUncheckedUpdateWithoutFollowsInput>
}

export type UserUpdateWithoutFollowsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutFollowsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutNotificationsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutNotificationsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
}

export type UserCreateWithoutNotifsAboutInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutNotifsAboutInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutNotifsAboutInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutNotifsAboutInput, Prisma.UserUncheckedCreateWithoutNotifsAboutInput>
}

export type UserUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsInput, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsInput, Prisma.UserUncheckedCreateWithoutNotificationsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsInput, Prisma.UserUncheckedUpdateWithoutNotificationsInput>
}

export type UserUpdateWithoutNotificationsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserUpsertWithoutNotifsAboutInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutNotifsAboutInput, Prisma.UserUncheckedUpdateWithoutNotifsAboutInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutNotifsAboutInput, Prisma.UserUncheckedCreateWithoutNotifsAboutInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutNotifsAboutInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutNotifsAboutInput, Prisma.UserUncheckedUpdateWithoutNotifsAboutInput>
}

export type UserUpdateWithoutNotifsAboutInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutNotifsAboutInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutMapNotifiesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutMapNotifiesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutMapNotifiesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutMapNotifiesInput, Prisma.UserUncheckedCreateWithoutMapNotifiesInput>
}

export type UserUpsertWithoutMapNotifiesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutMapNotifiesInput, Prisma.UserUncheckedUpdateWithoutMapNotifiesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutMapNotifiesInput, Prisma.UserUncheckedCreateWithoutMapNotifiesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutMapNotifiesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutMapNotifiesInput, Prisma.UserUncheckedUpdateWithoutMapNotifiesInput>
}

export type UserUpdateWithoutMapNotifiesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutMapNotifiesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutSubmittedMapsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSubmittedMapsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSubmittedMapsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapsInput>
}

export type UserUpsertWithoutSubmittedMapsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapsInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSubmittedMapsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapsInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapsInput>
}

export type UserUpdateWithoutSubmittedMapsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSubmittedMapsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutSubmittedMapVersionsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSubmittedMapVersionsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSubmittedMapVersionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapVersionsInput>
}

export type UserUpsertWithoutSubmittedMapVersionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapVersionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedCreateWithoutSubmittedMapVersionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSubmittedMapVersionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapVersionsInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapVersionsInput>
}

export type UserUpdateWithoutSubmittedMapVersionsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSubmittedMapVersionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutMapCreditsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutMapCreditsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutMapCreditsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutMapCreditsInput, Prisma.UserUncheckedCreateWithoutMapCreditsInput>
}

export type UserUpsertWithoutMapCreditsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutMapCreditsInput, Prisma.UserUncheckedUpdateWithoutMapCreditsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutMapCreditsInput, Prisma.UserUncheckedCreateWithoutMapCreditsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutMapCreditsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutMapCreditsInput, Prisma.UserUncheckedUpdateWithoutMapCreditsInput>
}

export type UserUpdateWithoutMapCreditsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutMapCreditsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutMapFavoritesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutMapFavoritesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutMapFavoritesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutMapFavoritesInput, Prisma.UserUncheckedCreateWithoutMapFavoritesInput>
}

export type UserUpsertWithoutMapFavoritesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutMapFavoritesInput, Prisma.UserUncheckedUpdateWithoutMapFavoritesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutMapFavoritesInput, Prisma.UserUncheckedCreateWithoutMapFavoritesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutMapFavoritesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutMapFavoritesInput, Prisma.UserUncheckedUpdateWithoutMapFavoritesInput>
}

export type UserUpdateWithoutMapFavoritesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutMapFavoritesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutTestInvitesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutTestInvitesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutTestInvitesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutTestInvitesInput, Prisma.UserUncheckedCreateWithoutTestInvitesInput>
}

export type UserUpsertWithoutTestInvitesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutTestInvitesInput, Prisma.UserUncheckedUpdateWithoutTestInvitesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutTestInvitesInput, Prisma.UserUncheckedCreateWithoutTestInvitesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutTestInvitesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutTestInvitesInput, Prisma.UserUncheckedUpdateWithoutTestInvitesInput>
}

export type UserUpdateWithoutTestInvitesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutTestInvitesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutSubmittedMapDatesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSubmittedMapDatesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSubmittedMapDatesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedCreateWithoutSubmittedMapDatesInput>
}

export type UserUpsertWithoutSubmittedMapDatesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapDatesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedCreateWithoutSubmittedMapDatesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSubmittedMapDatesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSubmittedMapDatesInput, Prisma.UserUncheckedUpdateWithoutSubmittedMapDatesInput>
}

export type UserUpdateWithoutSubmittedMapDatesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSubmittedMapDatesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutReviewsSubmittedInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutReviewsSubmittedInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutReviewsSubmittedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsSubmittedInput, Prisma.UserUncheckedCreateWithoutReviewsSubmittedInput>
}

export type UserCreateWithoutReviewsResolvedInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutReviewsResolvedInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutReviewsResolvedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsResolvedInput, Prisma.UserUncheckedCreateWithoutReviewsResolvedInput>
}

export type UserUpsertWithoutReviewsSubmittedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReviewsSubmittedInput, Prisma.UserUncheckedUpdateWithoutReviewsSubmittedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsSubmittedInput, Prisma.UserUncheckedCreateWithoutReviewsSubmittedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReviewsSubmittedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReviewsSubmittedInput, Prisma.UserUncheckedUpdateWithoutReviewsSubmittedInput>
}

export type UserUpdateWithoutReviewsSubmittedInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutReviewsSubmittedInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserUpsertWithoutReviewsResolvedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReviewsResolvedInput, Prisma.UserUncheckedUpdateWithoutReviewsResolvedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsResolvedInput, Prisma.UserUncheckedCreateWithoutReviewsResolvedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReviewsResolvedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReviewsResolvedInput, Prisma.UserUncheckedUpdateWithoutReviewsResolvedInput>
}

export type UserUpdateWithoutReviewsResolvedInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutReviewsResolvedInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutReviewCommentsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutReviewCommentsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutReviewCommentsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewCommentsInput, Prisma.UserUncheckedCreateWithoutReviewCommentsInput>
}

export type UserUpsertWithoutReviewCommentsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReviewCommentsInput, Prisma.UserUncheckedUpdateWithoutReviewCommentsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewCommentsInput, Prisma.UserUncheckedCreateWithoutReviewCommentsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReviewCommentsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReviewCommentsInput, Prisma.UserUncheckedUpdateWithoutReviewCommentsInput>
}

export type UserUpdateWithoutReviewCommentsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutReviewCommentsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutLeaderboardRunsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutLeaderboardRunsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutLeaderboardRunsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutLeaderboardRunsInput, Prisma.UserUncheckedCreateWithoutLeaderboardRunsInput>
}

export type UserUpsertWithoutLeaderboardRunsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutLeaderboardRunsInput, Prisma.UserUncheckedUpdateWithoutLeaderboardRunsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutLeaderboardRunsInput, Prisma.UserUncheckedCreateWithoutLeaderboardRunsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutLeaderboardRunsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutLeaderboardRunsInput, Prisma.UserUncheckedUpdateWithoutLeaderboardRunsInput>
}

export type UserUpdateWithoutLeaderboardRunsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutLeaderboardRunsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutPastRunsInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutPastRunsInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
  adminActivities?: Prisma.AdminActivityUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutPastRunsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutPastRunsInput, Prisma.UserUncheckedCreateWithoutPastRunsInput>
}

export type UserUpsertWithoutPastRunsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutPastRunsInput, Prisma.UserUncheckedUpdateWithoutPastRunsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutPastRunsInput, Prisma.UserUncheckedCreateWithoutPastRunsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutPastRunsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutPastRunsInput, Prisma.UserUncheckedUpdateWithoutPastRunsInput>
}

export type UserUpdateWithoutPastRunsInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutPastRunsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
  adminActivities?: Prisma.AdminActivityUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutAdminActivitiesInput = {
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutAdminActivitiesInput = {
  id?: number
  roles?: number
  bans?: number
  steamID?: bigint | number | null
  alias: string
  avatar?: string | null
  country?: string | null
  createdAt?: Date | string
  userAuth?: Prisma.UserAuthUncheckedCreateNestedOneWithoutUserInput
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  userStats?: Prisma.UserStatsUncheckedCreateNestedOneWithoutUserInput
  submittedMaps?: Prisma.MMapUncheckedCreateNestedManyWithoutSubmitterInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedCreateNestedManyWithoutUserInput
  submittedMapVersions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutSubmitterInput
  mapCredits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutUserInput
  mapFavorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutUserInput
  activities?: Prisma.ActivityUncheckedCreateNestedManyWithoutUserInput
  follows?: Prisma.FollowUncheckedCreateNestedManyWithoutFolloweeInput
  followers?: Prisma.FollowUncheckedCreateNestedManyWithoutFollowedInput
  mapNotifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutUserInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutNotifiedUserInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutUserInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutUserInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutUserInput
  reportSubmitted?: Prisma.ReportUncheckedCreateNestedManyWithoutSubmitterInput
  reportResolved?: Prisma.ReportUncheckedCreateNestedManyWithoutResolverInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutUserInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsResolved?: Prisma.MapReviewUncheckedCreateNestedManyWithoutResolverInput
  reviewComments?: Prisma.MapReviewCommentUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutAdminActivitiesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAdminActivitiesInput, Prisma.UserUncheckedCreateWithoutAdminActivitiesInput>
}

export type UserUpsertWithoutAdminActivitiesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAdminActivitiesInput, Prisma.UserUncheckedUpdateWithoutAdminActivitiesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAdminActivitiesInput, Prisma.UserUncheckedCreateWithoutAdminActivitiesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAdminActivitiesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAdminActivitiesInput, Prisma.UserUncheckedUpdateWithoutAdminActivitiesInput>
}

export type UserUpdateWithoutAdminActivitiesInput = {
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutAdminActivitiesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  roles?: Prisma.IntFieldUpdateOperationsInput | number
  bans?: Prisma.IntFieldUpdateOperationsInput | number
  steamID?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  alias?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userAuth?: Prisma.UserAuthUncheckedUpdateOneWithoutUserNestedInput
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  userStats?: Prisma.UserStatsUncheckedUpdateOneWithoutUserNestedInput
  submittedMaps?: Prisma.MMapUncheckedUpdateManyWithoutSubmitterNestedInput
  submittedMapDates?: Prisma.MapSubmissionDateUncheckedUpdateManyWithoutUserNestedInput
  submittedMapVersions?: Prisma.MapVersionUncheckedUpdateManyWithoutSubmitterNestedInput
  mapCredits?: Prisma.MapCreditUncheckedUpdateManyWithoutUserNestedInput
  mapFavorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutUserNestedInput
  activities?: Prisma.ActivityUncheckedUpdateManyWithoutUserNestedInput
  follows?: Prisma.FollowUncheckedUpdateManyWithoutFolloweeNestedInput
  followers?: Prisma.FollowUncheckedUpdateManyWithoutFollowedNestedInput
  mapNotifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutUserNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutNotifiedUserNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutUserNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutUserNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutUserNestedInput
  reportSubmitted?: Prisma.ReportUncheckedUpdateManyWithoutSubmitterNestedInput
  reportResolved?: Prisma.ReportUncheckedUpdateManyWithoutResolverNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutUserNestedInput
  reviewsSubmitted?: Prisma.MapReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsResolved?: Prisma.MapReviewUncheckedUpdateManyWithoutResolverNestedInput
  reviewComments?: Prisma.MapReviewCommentUncheckedUpdateManyWithoutUserNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  submittedMaps: number
  submittedMapDates: number
  submittedMapVersions: number
  mapCredits: number
  mapFavorites: number
  activities: number
  follows: number
  followers: number
  mapNotifies: number
  notifications: number
  notifsAbout: number
  leaderboardRuns: number
  pastRuns: number
  reportSubmitted: number
  reportResolved: number
  testInvites: number
  reviewsSubmitted: number
  reviewsResolved: number
  reviewComments: number
  adminActivities: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  submittedMaps?: boolean | UserCountOutputTypeCountSubmittedMapsArgs
  submittedMapDates?: boolean | UserCountOutputTypeCountSubmittedMapDatesArgs
  submittedMapVersions?: boolean | UserCountOutputTypeCountSubmittedMapVersionsArgs
  mapCredits?: boolean | UserCountOutputTypeCountMapCreditsArgs
  mapFavorites?: boolean | UserCountOutputTypeCountMapFavoritesArgs
  activities?: boolean | UserCountOutputTypeCountActivitiesArgs
  follows?: boolean | UserCountOutputTypeCountFollowsArgs
  followers?: boolean | UserCountOutputTypeCountFollowersArgs
  mapNotifies?: boolean | UserCountOutputTypeCountMapNotifiesArgs
  notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
  notifsAbout?: boolean | UserCountOutputTypeCountNotifsAboutArgs
  leaderboardRuns?: boolean | UserCountOutputTypeCountLeaderboardRunsArgs
  pastRuns?: boolean | UserCountOutputTypeCountPastRunsArgs
  reportSubmitted?: boolean | UserCountOutputTypeCountReportSubmittedArgs
  reportResolved?: boolean | UserCountOutputTypeCountReportResolvedArgs
  testInvites?: boolean | UserCountOutputTypeCountTestInvitesArgs
  reviewsSubmitted?: boolean | UserCountOutputTypeCountReviewsSubmittedArgs
  reviewsResolved?: boolean | UserCountOutputTypeCountReviewsResolvedArgs
  reviewComments?: boolean | UserCountOutputTypeCountReviewCommentsArgs
  adminActivities?: boolean | UserCountOutputTypeCountAdminActivitiesArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubmittedMapsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MMapWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubmittedMapDatesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapSubmissionDateWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubmittedMapVersionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapVersionWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMapCreditsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapCreditWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMapFavoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapFavoriteWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountActivitiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ActivityWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountFollowsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountFollowersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FollowWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMapNotifiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapNotifyWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotifsAboutArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountLeaderboardRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeaderboardRunWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountPastRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PastRunWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReportSubmittedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReportWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReportResolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReportWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTestInvitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapTestInviteWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReviewsSubmittedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapReviewWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReviewsResolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapReviewWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReviewCommentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapReviewCommentWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAdminActivitiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AdminActivityWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roles?: boolean
  bans?: boolean
  steamID?: boolean
  alias?: boolean
  avatar?: boolean
  country?: boolean
  createdAt?: boolean
  userAuth?: boolean | Prisma.User$userAuthArgs<ExtArgs>
  profile?: boolean | Prisma.User$profileArgs<ExtArgs>
  userStats?: boolean | Prisma.User$userStatsArgs<ExtArgs>
  submittedMaps?: boolean | Prisma.User$submittedMapsArgs<ExtArgs>
  submittedMapDates?: boolean | Prisma.User$submittedMapDatesArgs<ExtArgs>
  submittedMapVersions?: boolean | Prisma.User$submittedMapVersionsArgs<ExtArgs>
  mapCredits?: boolean | Prisma.User$mapCreditsArgs<ExtArgs>
  mapFavorites?: boolean | Prisma.User$mapFavoritesArgs<ExtArgs>
  activities?: boolean | Prisma.User$activitiesArgs<ExtArgs>
  follows?: boolean | Prisma.User$followsArgs<ExtArgs>
  followers?: boolean | Prisma.User$followersArgs<ExtArgs>
  mapNotifies?: boolean | Prisma.User$mapNotifiesArgs<ExtArgs>
  notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>
  notifsAbout?: boolean | Prisma.User$notifsAboutArgs<ExtArgs>
  leaderboardRuns?: boolean | Prisma.User$leaderboardRunsArgs<ExtArgs>
  pastRuns?: boolean | Prisma.User$pastRunsArgs<ExtArgs>
  reportSubmitted?: boolean | Prisma.User$reportSubmittedArgs<ExtArgs>
  reportResolved?: boolean | Prisma.User$reportResolvedArgs<ExtArgs>
  testInvites?: boolean | Prisma.User$testInvitesArgs<ExtArgs>
  reviewsSubmitted?: boolean | Prisma.User$reviewsSubmittedArgs<ExtArgs>
  reviewsResolved?: boolean | Prisma.User$reviewsResolvedArgs<ExtArgs>
  reviewComments?: boolean | Prisma.User$reviewCommentsArgs<ExtArgs>
  adminActivities?: boolean | Prisma.User$adminActivitiesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roles?: boolean
  bans?: boolean
  steamID?: boolean
  alias?: boolean
  avatar?: boolean
  country?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roles?: boolean
  bans?: boolean
  steamID?: boolean
  alias?: boolean
  avatar?: boolean
  country?: boolean
  createdAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  roles?: boolean
  bans?: boolean
  steamID?: boolean
  alias?: boolean
  avatar?: boolean
  country?: boolean
  createdAt?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "roles" | "bans" | "steamID" | "alias" | "avatar" | "country" | "createdAt", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  userAuth?: boolean | Prisma.User$userAuthArgs<ExtArgs>
  profile?: boolean | Prisma.User$profileArgs<ExtArgs>
  userStats?: boolean | Prisma.User$userStatsArgs<ExtArgs>
  submittedMaps?: boolean | Prisma.User$submittedMapsArgs<ExtArgs>
  submittedMapDates?: boolean | Prisma.User$submittedMapDatesArgs<ExtArgs>
  submittedMapVersions?: boolean | Prisma.User$submittedMapVersionsArgs<ExtArgs>
  mapCredits?: boolean | Prisma.User$mapCreditsArgs<ExtArgs>
  mapFavorites?: boolean | Prisma.User$mapFavoritesArgs<ExtArgs>
  activities?: boolean | Prisma.User$activitiesArgs<ExtArgs>
  follows?: boolean | Prisma.User$followsArgs<ExtArgs>
  followers?: boolean | Prisma.User$followersArgs<ExtArgs>
  mapNotifies?: boolean | Prisma.User$mapNotifiesArgs<ExtArgs>
  notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>
  notifsAbout?: boolean | Prisma.User$notifsAboutArgs<ExtArgs>
  leaderboardRuns?: boolean | Prisma.User$leaderboardRunsArgs<ExtArgs>
  pastRuns?: boolean | Prisma.User$pastRunsArgs<ExtArgs>
  reportSubmitted?: boolean | Prisma.User$reportSubmittedArgs<ExtArgs>
  reportResolved?: boolean | Prisma.User$reportResolvedArgs<ExtArgs>
  testInvites?: boolean | Prisma.User$testInvitesArgs<ExtArgs>
  reviewsSubmitted?: boolean | Prisma.User$reviewsSubmittedArgs<ExtArgs>
  reviewsResolved?: boolean | Prisma.User$reviewsResolvedArgs<ExtArgs>
  reviewComments?: boolean | Prisma.User$reviewCommentsArgs<ExtArgs>
  adminActivities?: boolean | Prisma.User$adminActivitiesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    userAuth: Prisma.$UserAuthPayload<ExtArgs> | null
    profile: Prisma.$ProfilePayload<ExtArgs> | null
    userStats: Prisma.$UserStatsPayload<ExtArgs> | null
    submittedMaps: Prisma.$MMapPayload<ExtArgs>[]
    submittedMapDates: Prisma.$MapSubmissionDatePayload<ExtArgs>[]
    submittedMapVersions: Prisma.$MapVersionPayload<ExtArgs>[]
    mapCredits: Prisma.$MapCreditPayload<ExtArgs>[]
    mapFavorites: Prisma.$MapFavoritePayload<ExtArgs>[]
    activities: Prisma.$ActivityPayload<ExtArgs>[]
    follows: Prisma.$FollowPayload<ExtArgs>[]
    followers: Prisma.$FollowPayload<ExtArgs>[]
    mapNotifies: Prisma.$MapNotifyPayload<ExtArgs>[]
    notifications: Prisma.$NotificationPayload<ExtArgs>[]
    notifsAbout: Prisma.$NotificationPayload<ExtArgs>[]
    leaderboardRuns: Prisma.$LeaderboardRunPayload<ExtArgs>[]
    pastRuns: Prisma.$PastRunPayload<ExtArgs>[]
    reportSubmitted: Prisma.$ReportPayload<ExtArgs>[]
    reportResolved: Prisma.$ReportPayload<ExtArgs>[]
    testInvites: Prisma.$MapTestInvitePayload<ExtArgs>[]
    reviewsSubmitted: Prisma.$MapReviewPayload<ExtArgs>[]
    reviewsResolved: Prisma.$MapReviewPayload<ExtArgs>[]
    reviewComments: Prisma.$MapReviewCommentPayload<ExtArgs>[]
    adminActivities: Prisma.$AdminActivityPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    /**
     * Flags of roles.enum.ts
     */
    roles: number
    /**
     * Flags of bans.enum.ts
     */
    bans: number
    /**
     * Optional because placeholders don't have SteamIDs
     */
    steamID: bigint | null
    alias: string
    avatar: string | null
    country: string | null
    createdAt: Date
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  userAuth<T extends Prisma.User$userAuthArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$userAuthArgs<ExtArgs>>): Prisma.Prisma__UserAuthClient<runtime.Types.Result.GetResult<Prisma.$UserAuthPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  profile<T extends Prisma.User$profileArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$profileArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  userStats<T extends Prisma.User$userStatsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$userStatsArgs<ExtArgs>>): Prisma.Prisma__UserStatsClient<runtime.Types.Result.GetResult<Prisma.$UserStatsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  submittedMaps<T extends Prisma.User$submittedMapsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$submittedMapsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  submittedMapDates<T extends Prisma.User$submittedMapDatesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$submittedMapDatesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapSubmissionDatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  submittedMapVersions<T extends Prisma.User$submittedMapVersionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$submittedMapVersionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  mapCredits<T extends Prisma.User$mapCreditsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$mapCreditsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapCreditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  mapFavorites<T extends Prisma.User$mapFavoritesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$mapFavoritesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapFavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  activities<T extends Prisma.User$activitiesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  follows<T extends Prisma.User$followsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$followsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  followers<T extends Prisma.User$followersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$followersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  mapNotifies<T extends Prisma.User$mapNotifiesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$mapNotifiesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapNotifyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifications<T extends Prisma.User$notificationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifsAbout<T extends Prisma.User$notifsAboutArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$notifsAboutArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaderboardRuns<T extends Prisma.User$leaderboardRunsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$leaderboardRunsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaderboardRunPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  pastRuns<T extends Prisma.User$pastRunsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$pastRunsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PastRunPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reportSubmitted<T extends Prisma.User$reportSubmittedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reportSubmittedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reportResolved<T extends Prisma.User$reportResolvedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reportResolvedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  testInvites<T extends Prisma.User$testInvitesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$testInvitesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapTestInvitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewsSubmitted<T extends Prisma.User$reviewsSubmittedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reviewsSubmittedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewsResolved<T extends Prisma.User$reviewsResolvedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reviewsResolvedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewComments<T extends Prisma.User$reviewCommentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reviewCommentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapReviewCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  adminActivities<T extends Prisma.User$adminActivitiesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$adminActivitiesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AdminActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'Int'>
  readonly roles: Prisma.FieldRef<"User", 'Int'>
  readonly bans: Prisma.FieldRef<"User", 'Int'>
  readonly steamID: Prisma.FieldRef<"User", 'BigInt'>
  readonly alias: Prisma.FieldRef<"User", 'String'>
  readonly avatar: Prisma.FieldRef<"User", 'String'>
  readonly country: Prisma.FieldRef<"User", 'String'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.userAuth
 */
export type User$userAuthArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserAuth
   */
  select?: Prisma.UserAuthSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserAuth
   */
  omit?: Prisma.UserAuthOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserAuthInclude<ExtArgs> | null
  where?: Prisma.UserAuthWhereInput
}

/**
 * User.profile
 */
export type User$profileArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  where?: Prisma.ProfileWhereInput
}

/**
 * User.userStats
 */
export type User$userStatsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserStats
   */
  select?: Prisma.UserStatsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserStats
   */
  omit?: Prisma.UserStatsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserStatsInclude<ExtArgs> | null
  where?: Prisma.UserStatsWhereInput
}

/**
 * User.submittedMaps
 */
export type User$submittedMapsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  where?: Prisma.MMapWhereInput
  orderBy?: Prisma.MMapOrderByWithRelationInput | Prisma.MMapOrderByWithRelationInput[]
  cursor?: Prisma.MMapWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MMapScalarFieldEnum | Prisma.MMapScalarFieldEnum[]
}

/**
 * User.submittedMapDates
 */
export type User$submittedMapDatesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapSubmissionDate
   */
  select?: Prisma.MapSubmissionDateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapSubmissionDate
   */
  omit?: Prisma.MapSubmissionDateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapSubmissionDateInclude<ExtArgs> | null
  where?: Prisma.MapSubmissionDateWhereInput
  orderBy?: Prisma.MapSubmissionDateOrderByWithRelationInput | Prisma.MapSubmissionDateOrderByWithRelationInput[]
  cursor?: Prisma.MapSubmissionDateWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapSubmissionDateScalarFieldEnum | Prisma.MapSubmissionDateScalarFieldEnum[]
}

/**
 * User.submittedMapVersions
 */
export type User$submittedMapVersionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapVersion
   */
  select?: Prisma.MapVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapVersion
   */
  omit?: Prisma.MapVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapVersionInclude<ExtArgs> | null
  where?: Prisma.MapVersionWhereInput
  orderBy?: Prisma.MapVersionOrderByWithRelationInput | Prisma.MapVersionOrderByWithRelationInput[]
  cursor?: Prisma.MapVersionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapVersionScalarFieldEnum | Prisma.MapVersionScalarFieldEnum[]
}

/**
 * User.mapCredits
 */
export type User$mapCreditsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapCredit
   */
  select?: Prisma.MapCreditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapCredit
   */
  omit?: Prisma.MapCreditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapCreditInclude<ExtArgs> | null
  where?: Prisma.MapCreditWhereInput
  orderBy?: Prisma.MapCreditOrderByWithRelationInput | Prisma.MapCreditOrderByWithRelationInput[]
  cursor?: Prisma.MapCreditWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapCreditScalarFieldEnum | Prisma.MapCreditScalarFieldEnum[]
}

/**
 * User.mapFavorites
 */
export type User$mapFavoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapFavorite
   */
  select?: Prisma.MapFavoriteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapFavorite
   */
  omit?: Prisma.MapFavoriteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapFavoriteInclude<ExtArgs> | null
  where?: Prisma.MapFavoriteWhereInput
  orderBy?: Prisma.MapFavoriteOrderByWithRelationInput | Prisma.MapFavoriteOrderByWithRelationInput[]
  cursor?: Prisma.MapFavoriteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapFavoriteScalarFieldEnum | Prisma.MapFavoriteScalarFieldEnum[]
}

/**
 * User.activities
 */
export type User$activitiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Activity
   */
  select?: Prisma.ActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the Activity
   */
  omit?: Prisma.ActivityOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ActivityInclude<ExtArgs> | null
  where?: Prisma.ActivityWhereInput
  orderBy?: Prisma.ActivityOrderByWithRelationInput | Prisma.ActivityOrderByWithRelationInput[]
  cursor?: Prisma.ActivityWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ActivityScalarFieldEnum | Prisma.ActivityScalarFieldEnum[]
}

/**
 * User.follows
 */
export type User$followsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * User.followers
 */
export type User$followersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Follow
   */
  select?: Prisma.FollowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Follow
   */
  omit?: Prisma.FollowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FollowInclude<ExtArgs> | null
  where?: Prisma.FollowWhereInput
  orderBy?: Prisma.FollowOrderByWithRelationInput | Prisma.FollowOrderByWithRelationInput[]
  cursor?: Prisma.FollowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FollowScalarFieldEnum | Prisma.FollowScalarFieldEnum[]
}

/**
 * User.mapNotifies
 */
export type User$mapNotifiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapNotify
   */
  select?: Prisma.MapNotifySelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapNotify
   */
  omit?: Prisma.MapNotifyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapNotifyInclude<ExtArgs> | null
  where?: Prisma.MapNotifyWhereInput
  orderBy?: Prisma.MapNotifyOrderByWithRelationInput | Prisma.MapNotifyOrderByWithRelationInput[]
  cursor?: Prisma.MapNotifyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapNotifyScalarFieldEnum | Prisma.MapNotifyScalarFieldEnum[]
}

/**
 * User.notifications
 */
export type User$notificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * User.notifsAbout
 */
export type User$notifsAboutArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * User.leaderboardRuns
 */
export type User$leaderboardRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaderboardRun
   */
  select?: Prisma.LeaderboardRunSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaderboardRun
   */
  omit?: Prisma.LeaderboardRunOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaderboardRunInclude<ExtArgs> | null
  where?: Prisma.LeaderboardRunWhereInput
  orderBy?: Prisma.LeaderboardRunOrderByWithRelationInput | Prisma.LeaderboardRunOrderByWithRelationInput[]
  cursor?: Prisma.LeaderboardRunWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaderboardRunScalarFieldEnum | Prisma.LeaderboardRunScalarFieldEnum[]
}

/**
 * User.pastRuns
 */
export type User$pastRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PastRun
   */
  select?: Prisma.PastRunSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PastRun
   */
  omit?: Prisma.PastRunOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PastRunInclude<ExtArgs> | null
  where?: Prisma.PastRunWhereInput
  orderBy?: Prisma.PastRunOrderByWithRelationInput | Prisma.PastRunOrderByWithRelationInput[]
  cursor?: Prisma.PastRunWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PastRunScalarFieldEnum | Prisma.PastRunScalarFieldEnum[]
}

/**
 * User.reportSubmitted
 */
export type User$reportSubmittedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Report
   */
  select?: Prisma.ReportSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Report
   */
  omit?: Prisma.ReportOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportInclude<ExtArgs> | null
  where?: Prisma.ReportWhereInput
  orderBy?: Prisma.ReportOrderByWithRelationInput | Prisma.ReportOrderByWithRelationInput[]
  cursor?: Prisma.ReportWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReportScalarFieldEnum | Prisma.ReportScalarFieldEnum[]
}

/**
 * User.reportResolved
 */
export type User$reportResolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Report
   */
  select?: Prisma.ReportSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Report
   */
  omit?: Prisma.ReportOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportInclude<ExtArgs> | null
  where?: Prisma.ReportWhereInput
  orderBy?: Prisma.ReportOrderByWithRelationInput | Prisma.ReportOrderByWithRelationInput[]
  cursor?: Prisma.ReportWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReportScalarFieldEnum | Prisma.ReportScalarFieldEnum[]
}

/**
 * User.testInvites
 */
export type User$testInvitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapTestInvite
   */
  select?: Prisma.MapTestInviteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapTestInvite
   */
  omit?: Prisma.MapTestInviteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapTestInviteInclude<ExtArgs> | null
  where?: Prisma.MapTestInviteWhereInput
  orderBy?: Prisma.MapTestInviteOrderByWithRelationInput | Prisma.MapTestInviteOrderByWithRelationInput[]
  cursor?: Prisma.MapTestInviteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapTestInviteScalarFieldEnum | Prisma.MapTestInviteScalarFieldEnum[]
}

/**
 * User.reviewsSubmitted
 */
export type User$reviewsSubmittedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapReview
   */
  select?: Prisma.MapReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapReview
   */
  omit?: Prisma.MapReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapReviewInclude<ExtArgs> | null
  where?: Prisma.MapReviewWhereInput
  orderBy?: Prisma.MapReviewOrderByWithRelationInput | Prisma.MapReviewOrderByWithRelationInput[]
  cursor?: Prisma.MapReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapReviewScalarFieldEnum | Prisma.MapReviewScalarFieldEnum[]
}

/**
 * User.reviewsResolved
 */
export type User$reviewsResolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapReview
   */
  select?: Prisma.MapReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapReview
   */
  omit?: Prisma.MapReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapReviewInclude<ExtArgs> | null
  where?: Prisma.MapReviewWhereInput
  orderBy?: Prisma.MapReviewOrderByWithRelationInput | Prisma.MapReviewOrderByWithRelationInput[]
  cursor?: Prisma.MapReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapReviewScalarFieldEnum | Prisma.MapReviewScalarFieldEnum[]
}

/**
 * User.reviewComments
 */
export type User$reviewCommentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapReviewComment
   */
  select?: Prisma.MapReviewCommentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapReviewComment
   */
  omit?: Prisma.MapReviewCommentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapReviewCommentInclude<ExtArgs> | null
  where?: Prisma.MapReviewCommentWhereInput
  orderBy?: Prisma.MapReviewCommentOrderByWithRelationInput | Prisma.MapReviewCommentOrderByWithRelationInput[]
  cursor?: Prisma.MapReviewCommentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapReviewCommentScalarFieldEnum | Prisma.MapReviewCommentScalarFieldEnum[]
}

/**
 * User.adminActivities
 */
export type User$adminActivitiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AdminActivity
   */
  select?: Prisma.AdminActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the AdminActivity
   */
  omit?: Prisma.AdminActivityOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AdminActivityInclude<ExtArgs> | null
  where?: Prisma.AdminActivityWhereInput
  orderBy?: Prisma.AdminActivityOrderByWithRelationInput | Prisma.AdminActivityOrderByWithRelationInput[]
  cursor?: Prisma.AdminActivityWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AdminActivityScalarFieldEnum | Prisma.AdminActivityScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
