
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `MMap` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model MMap
 * The term 'MMap' is used to avoid collisions with the JS data structure, just
 * in cases where the exact name "Map" is used.
 */
export type MMapModel = runtime.Types.Result.DefaultSelection<Prisma.$MMapPayload>

export type AggregateMMap = {
  _count: MMapCountAggregateOutputType | null
  _avg: MMapAvgAggregateOutputType | null
  _sum: MMapSumAggregateOutputType | null
  _min: MMapMinAggregateOutputType | null
  _max: MMapMaxAggregateOutputType | null
}

export type MMapAvgAggregateOutputType = {
  id: number | null
  status: number | null
  submitterID: number | null
}

export type MMapSumAggregateOutputType = {
  id: number | null
  status: number | null
  submitterID: number | null
}

export type MMapMinAggregateOutputType = {
  id: number | null
  name: string | null
  status: number | null
  submitterID: number | null
  currentVersionID: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MMapMaxAggregateOutputType = {
  id: number | null
  name: string | null
  status: number | null
  submitterID: number | null
  currentVersionID: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MMapCountAggregateOutputType = {
  id: number
  name: number
  status: number
  images: number
  submitterID: number
  currentVersionID: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MMapAvgAggregateInputType = {
  id?: true
  status?: true
  submitterID?: true
}

export type MMapSumAggregateInputType = {
  id?: true
  status?: true
  submitterID?: true
}

export type MMapMinAggregateInputType = {
  id?: true
  name?: true
  status?: true
  submitterID?: true
  currentVersionID?: true
  createdAt?: true
  updatedAt?: true
}

export type MMapMaxAggregateInputType = {
  id?: true
  name?: true
  status?: true
  submitterID?: true
  currentVersionID?: true
  createdAt?: true
  updatedAt?: true
}

export type MMapCountAggregateInputType = {
  id?: true
  name?: true
  status?: true
  images?: true
  submitterID?: true
  currentVersionID?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MMapAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MMap to aggregate.
   */
  where?: Prisma.MMapWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MMaps to fetch.
   */
  orderBy?: Prisma.MMapOrderByWithRelationInput | Prisma.MMapOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MMapWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MMaps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MMaps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MMaps
  **/
  _count?: true | MMapCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MMapAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MMapSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MMapMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MMapMaxAggregateInputType
}

export type GetMMapAggregateType<T extends MMapAggregateArgs> = {
      [P in keyof T & keyof AggregateMMap]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMMap[P]>
    : Prisma.GetScalarType<T[P], AggregateMMap[P]>
}




export type MMapGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MMapWhereInput
  orderBy?: Prisma.MMapOrderByWithAggregationInput | Prisma.MMapOrderByWithAggregationInput[]
  by: Prisma.MMapScalarFieldEnum[] | Prisma.MMapScalarFieldEnum
  having?: Prisma.MMapScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MMapCountAggregateInputType | true
  _avg?: MMapAvgAggregateInputType
  _sum?: MMapSumAggregateInputType
  _min?: MMapMinAggregateInputType
  _max?: MMapMaxAggregateInputType
}

export type MMapGroupByOutputType = {
  id: number
  name: string
  status: number
  images: string[]
  submitterID: number | null
  currentVersionID: string | null
  createdAt: Date
  updatedAt: Date
  _count: MMapCountAggregateOutputType | null
  _avg: MMapAvgAggregateOutputType | null
  _sum: MMapSumAggregateOutputType | null
  _min: MMapMinAggregateOutputType | null
  _max: MMapMaxAggregateOutputType | null
}

type GetMMapGroupByPayload<T extends MMapGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MMapGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MMapGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MMapGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MMapGroupByOutputType[P]>
      }
    >
  >



export type MMapWhereInput = {
  AND?: Prisma.MMapWhereInput | Prisma.MMapWhereInput[]
  OR?: Prisma.MMapWhereInput[]
  NOT?: Prisma.MMapWhereInput | Prisma.MMapWhereInput[]
  id?: Prisma.IntFilter<"MMap"> | number
  name?: Prisma.StringFilter<"MMap"> | string
  status?: Prisma.IntFilter<"MMap"> | number
  images?: Prisma.StringNullableListFilter<"MMap">
  submitterID?: Prisma.IntNullableFilter<"MMap"> | number | null
  currentVersionID?: Prisma.UuidNullableFilter<"MMap"> | string | null
  createdAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
  submitter?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  stats?: Prisma.XOR<Prisma.MapStatsNullableScalarRelationFilter, Prisma.MapStatsWhereInput> | null
  info?: Prisma.XOR<Prisma.MapInfoNullableScalarRelationFilter, Prisma.MapInfoWhereInput> | null
  currentVersion?: Prisma.XOR<Prisma.MapVersionNullableScalarRelationFilter, Prisma.MapVersionWhereInput> | null
  versions?: Prisma.MapVersionListRelationFilter
  leaderboards?: Prisma.LeaderboardListRelationFilter
  leaderboardRuns?: Prisma.LeaderboardRunListRelationFilter
  pastRuns?: Prisma.PastRunListRelationFilter
  credits?: Prisma.MapCreditListRelationFilter
  favorites?: Prisma.MapFavoriteListRelationFilter
  notifies?: Prisma.MapNotifyListRelationFilter
  notifsAbout?: Prisma.NotificationListRelationFilter
  reviews?: Prisma.MapReviewListRelationFilter
  reviewStats?: Prisma.XOR<Prisma.MapReviewStatsNullableScalarRelationFilter, Prisma.MapReviewStatsWhereInput> | null
  submission?: Prisma.XOR<Prisma.MapSubmissionNullableScalarRelationFilter, Prisma.MapSubmissionWhereInput> | null
  testInvites?: Prisma.MapTestInviteListRelationFilter
}

export type MMapOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  images?: Prisma.SortOrder
  submitterID?: Prisma.SortOrderInput | Prisma.SortOrder
  currentVersionID?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submitter?: Prisma.UserOrderByWithRelationInput
  stats?: Prisma.MapStatsOrderByWithRelationInput
  info?: Prisma.MapInfoOrderByWithRelationInput
  currentVersion?: Prisma.MapVersionOrderByWithRelationInput
  versions?: Prisma.MapVersionOrderByRelationAggregateInput
  leaderboards?: Prisma.LeaderboardOrderByRelationAggregateInput
  leaderboardRuns?: Prisma.LeaderboardRunOrderByRelationAggregateInput
  pastRuns?: Prisma.PastRunOrderByRelationAggregateInput
  credits?: Prisma.MapCreditOrderByRelationAggregateInput
  favorites?: Prisma.MapFavoriteOrderByRelationAggregateInput
  notifies?: Prisma.MapNotifyOrderByRelationAggregateInput
  notifsAbout?: Prisma.NotificationOrderByRelationAggregateInput
  reviews?: Prisma.MapReviewOrderByRelationAggregateInput
  reviewStats?: Prisma.MapReviewStatsOrderByWithRelationInput
  submission?: Prisma.MapSubmissionOrderByWithRelationInput
  testInvites?: Prisma.MapTestInviteOrderByRelationAggregateInput
}

export type MMapWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  name?: string
  currentVersionID?: string
  AND?: Prisma.MMapWhereInput | Prisma.MMapWhereInput[]
  OR?: Prisma.MMapWhereInput[]
  NOT?: Prisma.MMapWhereInput | Prisma.MMapWhereInput[]
  status?: Prisma.IntFilter<"MMap"> | number
  images?: Prisma.StringNullableListFilter<"MMap">
  submitterID?: Prisma.IntNullableFilter<"MMap"> | number | null
  createdAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
  submitter?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  stats?: Prisma.XOR<Prisma.MapStatsNullableScalarRelationFilter, Prisma.MapStatsWhereInput> | null
  info?: Prisma.XOR<Prisma.MapInfoNullableScalarRelationFilter, Prisma.MapInfoWhereInput> | null
  currentVersion?: Prisma.XOR<Prisma.MapVersionNullableScalarRelationFilter, Prisma.MapVersionWhereInput> | null
  versions?: Prisma.MapVersionListRelationFilter
  leaderboards?: Prisma.LeaderboardListRelationFilter
  leaderboardRuns?: Prisma.LeaderboardRunListRelationFilter
  pastRuns?: Prisma.PastRunListRelationFilter
  credits?: Prisma.MapCreditListRelationFilter
  favorites?: Prisma.MapFavoriteListRelationFilter
  notifies?: Prisma.MapNotifyListRelationFilter
  notifsAbout?: Prisma.NotificationListRelationFilter
  reviews?: Prisma.MapReviewListRelationFilter
  reviewStats?: Prisma.XOR<Prisma.MapReviewStatsNullableScalarRelationFilter, Prisma.MapReviewStatsWhereInput> | null
  submission?: Prisma.XOR<Prisma.MapSubmissionNullableScalarRelationFilter, Prisma.MapSubmissionWhereInput> | null
  testInvites?: Prisma.MapTestInviteListRelationFilter
}, "id" | "name" | "currentVersionID">

export type MMapOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  images?: Prisma.SortOrder
  submitterID?: Prisma.SortOrderInput | Prisma.SortOrder
  currentVersionID?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MMapCountOrderByAggregateInput
  _avg?: Prisma.MMapAvgOrderByAggregateInput
  _max?: Prisma.MMapMaxOrderByAggregateInput
  _min?: Prisma.MMapMinOrderByAggregateInput
  _sum?: Prisma.MMapSumOrderByAggregateInput
}

export type MMapScalarWhereWithAggregatesInput = {
  AND?: Prisma.MMapScalarWhereWithAggregatesInput | Prisma.MMapScalarWhereWithAggregatesInput[]
  OR?: Prisma.MMapScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MMapScalarWhereWithAggregatesInput | Prisma.MMapScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"MMap"> | number
  name?: Prisma.StringWithAggregatesFilter<"MMap"> | string
  status?: Prisma.IntWithAggregatesFilter<"MMap"> | number
  images?: Prisma.StringNullableListFilter<"MMap">
  submitterID?: Prisma.IntNullableWithAggregatesFilter<"MMap"> | number | null
  currentVersionID?: Prisma.UuidNullableWithAggregatesFilter<"MMap"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"MMap"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"MMap"> | Date | string
}

export type MMapCreateInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateManyInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MMapUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MMapUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MMapListRelationFilter = {
  every?: Prisma.MMapWhereInput
  some?: Prisma.MMapWhereInput
  none?: Prisma.MMapWhereInput
}

export type MMapOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MMapNullableScalarRelationFilter = {
  is?: Prisma.MMapWhereInput | null
  isNot?: Prisma.MMapWhereInput | null
}

export type MMapScalarRelationFilter = {
  is?: Prisma.MMapWhereInput
  isNot?: Prisma.MMapWhereInput
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type MMapCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  images?: Prisma.SortOrder
  submitterID?: Prisma.SortOrder
  currentVersionID?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MMapAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  status?: Prisma.SortOrder
  submitterID?: Prisma.SortOrder
}

export type MMapMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  submitterID?: Prisma.SortOrder
  currentVersionID?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MMapMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  submitterID?: Prisma.SortOrder
  currentVersionID?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MMapSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  status?: Prisma.SortOrder
  submitterID?: Prisma.SortOrder
}

export type MMapCreateNestedManyWithoutSubmitterInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput> | Prisma.MMapCreateWithoutSubmitterInput[] | Prisma.MMapUncheckedCreateWithoutSubmitterInput[]
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmitterInput | Prisma.MMapCreateOrConnectWithoutSubmitterInput[]
  createMany?: Prisma.MMapCreateManySubmitterInputEnvelope
  connect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
}

export type MMapUncheckedCreateNestedManyWithoutSubmitterInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput> | Prisma.MMapCreateWithoutSubmitterInput[] | Prisma.MMapUncheckedCreateWithoutSubmitterInput[]
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmitterInput | Prisma.MMapCreateOrConnectWithoutSubmitterInput[]
  createMany?: Prisma.MMapCreateManySubmitterInputEnvelope
  connect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
}

export type MMapUpdateManyWithoutSubmitterNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput> | Prisma.MMapCreateWithoutSubmitterInput[] | Prisma.MMapUncheckedCreateWithoutSubmitterInput[]
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmitterInput | Prisma.MMapCreateOrConnectWithoutSubmitterInput[]
  upsert?: Prisma.MMapUpsertWithWhereUniqueWithoutSubmitterInput | Prisma.MMapUpsertWithWhereUniqueWithoutSubmitterInput[]
  createMany?: Prisma.MMapCreateManySubmitterInputEnvelope
  set?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  disconnect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  delete?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  connect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  update?: Prisma.MMapUpdateWithWhereUniqueWithoutSubmitterInput | Prisma.MMapUpdateWithWhereUniqueWithoutSubmitterInput[]
  updateMany?: Prisma.MMapUpdateManyWithWhereWithoutSubmitterInput | Prisma.MMapUpdateManyWithWhereWithoutSubmitterInput[]
  deleteMany?: Prisma.MMapScalarWhereInput | Prisma.MMapScalarWhereInput[]
}

export type MMapUncheckedUpdateManyWithoutSubmitterNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput> | Prisma.MMapCreateWithoutSubmitterInput[] | Prisma.MMapUncheckedCreateWithoutSubmitterInput[]
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmitterInput | Prisma.MMapCreateOrConnectWithoutSubmitterInput[]
  upsert?: Prisma.MMapUpsertWithWhereUniqueWithoutSubmitterInput | Prisma.MMapUpsertWithWhereUniqueWithoutSubmitterInput[]
  createMany?: Prisma.MMapCreateManySubmitterInputEnvelope
  set?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  disconnect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  delete?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  connect?: Prisma.MMapWhereUniqueInput | Prisma.MMapWhereUniqueInput[]
  update?: Prisma.MMapUpdateWithWhereUniqueWithoutSubmitterInput | Prisma.MMapUpdateWithWhereUniqueWithoutSubmitterInput[]
  updateMany?: Prisma.MMapUpdateManyWithWhereWithoutSubmitterInput | Prisma.MMapUpdateManyWithWhereWithoutSubmitterInput[]
  deleteMany?: Prisma.MMapScalarWhereInput | Prisma.MMapScalarWhereInput[]
}

export type MMapCreateNestedOneWithoutNotifsAboutInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutNotifsAboutInput, Prisma.MMapUncheckedCreateWithoutNotifsAboutInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutNotifsAboutInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneWithoutNotifsAboutNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutNotifsAboutInput, Prisma.MMapUncheckedCreateWithoutNotifsAboutInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutNotifsAboutInput
  upsert?: Prisma.MMapUpsertWithoutNotifsAboutInput
  disconnect?: Prisma.MMapWhereInput | boolean
  delete?: Prisma.MMapWhereInput | boolean
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutNotifsAboutInput, Prisma.MMapUpdateWithoutNotifsAboutInput>, Prisma.MMapUncheckedUpdateWithoutNotifsAboutInput>
}

export type MMapCreateNestedOneWithoutNotifiesInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutNotifiesInput, Prisma.MMapUncheckedCreateWithoutNotifiesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutNotifiesInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutNotifiesNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutNotifiesInput, Prisma.MMapUncheckedCreateWithoutNotifiesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutNotifiesInput
  upsert?: Prisma.MMapUpsertWithoutNotifiesInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutNotifiesInput, Prisma.MMapUpdateWithoutNotifiesInput>, Prisma.MMapUncheckedUpdateWithoutNotifiesInput>
}

export type MMapCreateimagesInput = {
  set: string[]
}

export type MMapUpdateimagesInput = {
  set?: string[]
  push?: string | string[]
}

export type MMapCreateNestedOneWithoutCurrentVersionInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCurrentVersionInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapCreateNestedOneWithoutVersionsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutVersionsInput, Prisma.MMapUncheckedCreateWithoutVersionsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutVersionsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUncheckedCreateNestedOneWithoutCurrentVersionInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCurrentVersionInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneWithoutCurrentVersionNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCurrentVersionInput
  upsert?: Prisma.MMapUpsertWithoutCurrentVersionInput
  disconnect?: Prisma.MMapWhereInput | boolean
  delete?: Prisma.MMapWhereInput | boolean
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutCurrentVersionInput, Prisma.MMapUpdateWithoutCurrentVersionInput>, Prisma.MMapUncheckedUpdateWithoutCurrentVersionInput>
}

export type MMapUpdateOneRequiredWithoutVersionsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutVersionsInput, Prisma.MMapUncheckedCreateWithoutVersionsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutVersionsInput
  upsert?: Prisma.MMapUpsertWithoutVersionsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutVersionsInput, Prisma.MMapUpdateWithoutVersionsInput>, Prisma.MMapUncheckedUpdateWithoutVersionsInput>
}

export type MMapUncheckedUpdateOneWithoutCurrentVersionNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCurrentVersionInput
  upsert?: Prisma.MMapUpsertWithoutCurrentVersionInput
  disconnect?: Prisma.MMapWhereInput | boolean
  delete?: Prisma.MMapWhereInput | boolean
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutCurrentVersionInput, Prisma.MMapUpdateWithoutCurrentVersionInput>, Prisma.MMapUncheckedUpdateWithoutCurrentVersionInput>
}

export type MMapCreateNestedOneWithoutCreditsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCreditsInput, Prisma.MMapUncheckedCreateWithoutCreditsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCreditsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutCreditsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutCreditsInput, Prisma.MMapUncheckedCreateWithoutCreditsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutCreditsInput
  upsert?: Prisma.MMapUpsertWithoutCreditsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutCreditsInput, Prisma.MMapUpdateWithoutCreditsInput>, Prisma.MMapUncheckedUpdateWithoutCreditsInput>
}

export type MMapCreateNestedOneWithoutFavoritesInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutFavoritesInput, Prisma.MMapUncheckedCreateWithoutFavoritesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutFavoritesInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutFavoritesNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutFavoritesInput, Prisma.MMapUncheckedCreateWithoutFavoritesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutFavoritesInput
  upsert?: Prisma.MMapUpsertWithoutFavoritesInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutFavoritesInput, Prisma.MMapUpdateWithoutFavoritesInput>, Prisma.MMapUncheckedUpdateWithoutFavoritesInput>
}

export type MMapCreateNestedOneWithoutInfoInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutInfoInput, Prisma.MMapUncheckedCreateWithoutInfoInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutInfoInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutInfoNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutInfoInput, Prisma.MMapUncheckedCreateWithoutInfoInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutInfoInput
  upsert?: Prisma.MMapUpsertWithoutInfoInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutInfoInput, Prisma.MMapUpdateWithoutInfoInput>, Prisma.MMapUncheckedUpdateWithoutInfoInput>
}

export type MMapCreateNestedOneWithoutStatsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutStatsInput, Prisma.MMapUncheckedCreateWithoutStatsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutStatsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutStatsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutStatsInput, Prisma.MMapUncheckedCreateWithoutStatsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutStatsInput
  upsert?: Prisma.MMapUpsertWithoutStatsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutStatsInput, Prisma.MMapUpdateWithoutStatsInput>, Prisma.MMapUncheckedUpdateWithoutStatsInput>
}

export type MMapCreateNestedOneWithoutTestInvitesInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutTestInvitesInput, Prisma.MMapUncheckedCreateWithoutTestInvitesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutTestInvitesInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutTestInvitesNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutTestInvitesInput, Prisma.MMapUncheckedCreateWithoutTestInvitesInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutTestInvitesInput
  upsert?: Prisma.MMapUpsertWithoutTestInvitesInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutTestInvitesInput, Prisma.MMapUpdateWithoutTestInvitesInput>, Prisma.MMapUncheckedUpdateWithoutTestInvitesInput>
}

export type MMapCreateNestedOneWithoutSubmissionInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmissionInput, Prisma.MMapUncheckedCreateWithoutSubmissionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmissionInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutSubmissionNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutSubmissionInput, Prisma.MMapUncheckedCreateWithoutSubmissionInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutSubmissionInput
  upsert?: Prisma.MMapUpsertWithoutSubmissionInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutSubmissionInput, Prisma.MMapUpdateWithoutSubmissionInput>, Prisma.MMapUncheckedUpdateWithoutSubmissionInput>
}

export type MMapCreateNestedOneWithoutReviewsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutReviewsInput, Prisma.MMapUncheckedCreateWithoutReviewsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutReviewsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutReviewsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutReviewsInput, Prisma.MMapUncheckedCreateWithoutReviewsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutReviewsInput
  upsert?: Prisma.MMapUpsertWithoutReviewsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutReviewsInput, Prisma.MMapUpdateWithoutReviewsInput>, Prisma.MMapUncheckedUpdateWithoutReviewsInput>
}

export type MMapCreateNestedOneWithoutReviewStatsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutReviewStatsInput, Prisma.MMapUncheckedCreateWithoutReviewStatsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutReviewStatsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutReviewStatsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutReviewStatsInput, Prisma.MMapUncheckedCreateWithoutReviewStatsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutReviewStatsInput
  upsert?: Prisma.MMapUpsertWithoutReviewStatsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutReviewStatsInput, Prisma.MMapUpdateWithoutReviewStatsInput>, Prisma.MMapUncheckedUpdateWithoutReviewStatsInput>
}

export type MMapCreateNestedOneWithoutLeaderboardsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutLeaderboardsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutLeaderboardsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutLeaderboardsInput
  upsert?: Prisma.MMapUpsertWithoutLeaderboardsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutLeaderboardsInput, Prisma.MMapUpdateWithoutLeaderboardsInput>, Prisma.MMapUncheckedUpdateWithoutLeaderboardsInput>
}

export type MMapCreateNestedOneWithoutLeaderboardRunsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardRunsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutLeaderboardRunsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutLeaderboardRunsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardRunsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutLeaderboardRunsInput
  upsert?: Prisma.MMapUpsertWithoutLeaderboardRunsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutLeaderboardRunsInput, Prisma.MMapUpdateWithoutLeaderboardRunsInput>, Prisma.MMapUncheckedUpdateWithoutLeaderboardRunsInput>
}

export type MMapCreateNestedOneWithoutPastRunsInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutPastRunsInput, Prisma.MMapUncheckedCreateWithoutPastRunsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutPastRunsInput
  connect?: Prisma.MMapWhereUniqueInput
}

export type MMapUpdateOneRequiredWithoutPastRunsNestedInput = {
  create?: Prisma.XOR<Prisma.MMapCreateWithoutPastRunsInput, Prisma.MMapUncheckedCreateWithoutPastRunsInput>
  connectOrCreate?: Prisma.MMapCreateOrConnectWithoutPastRunsInput
  upsert?: Prisma.MMapUpsertWithoutPastRunsInput
  connect?: Prisma.MMapWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MMapUpdateToOneWithWhereWithoutPastRunsInput, Prisma.MMapUpdateWithoutPastRunsInput>, Prisma.MMapUncheckedUpdateWithoutPastRunsInput>
}

export type MMapCreateWithoutSubmitterInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutSubmitterInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutSubmitterInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput>
}

export type MMapCreateManySubmitterInputEnvelope = {
  data: Prisma.MMapCreateManySubmitterInput | Prisma.MMapCreateManySubmitterInput[]
  skipDuplicates?: boolean
}

export type MMapUpsertWithWhereUniqueWithoutSubmitterInput = {
  where: Prisma.MMapWhereUniqueInput
  update: Prisma.XOR<Prisma.MMapUpdateWithoutSubmitterInput, Prisma.MMapUncheckedUpdateWithoutSubmitterInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutSubmitterInput, Prisma.MMapUncheckedCreateWithoutSubmitterInput>
}

export type MMapUpdateWithWhereUniqueWithoutSubmitterInput = {
  where: Prisma.MMapWhereUniqueInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutSubmitterInput, Prisma.MMapUncheckedUpdateWithoutSubmitterInput>
}

export type MMapUpdateManyWithWhereWithoutSubmitterInput = {
  where: Prisma.MMapScalarWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateManyMutationInput, Prisma.MMapUncheckedUpdateManyWithoutSubmitterInput>
}

export type MMapScalarWhereInput = {
  AND?: Prisma.MMapScalarWhereInput | Prisma.MMapScalarWhereInput[]
  OR?: Prisma.MMapScalarWhereInput[]
  NOT?: Prisma.MMapScalarWhereInput | Prisma.MMapScalarWhereInput[]
  id?: Prisma.IntFilter<"MMap"> | number
  name?: Prisma.StringFilter<"MMap"> | string
  status?: Prisma.IntFilter<"MMap"> | number
  images?: Prisma.StringNullableListFilter<"MMap">
  submitterID?: Prisma.IntNullableFilter<"MMap"> | number | null
  currentVersionID?: Prisma.UuidNullableFilter<"MMap"> | string | null
  createdAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MMap"> | Date | string
}

export type MMapCreateWithoutNotifsAboutInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutNotifsAboutInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutNotifsAboutInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutNotifsAboutInput, Prisma.MMapUncheckedCreateWithoutNotifsAboutInput>
}

export type MMapUpsertWithoutNotifsAboutInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutNotifsAboutInput, Prisma.MMapUncheckedUpdateWithoutNotifsAboutInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutNotifsAboutInput, Prisma.MMapUncheckedCreateWithoutNotifsAboutInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutNotifsAboutInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutNotifsAboutInput, Prisma.MMapUncheckedUpdateWithoutNotifsAboutInput>
}

export type MMapUpdateWithoutNotifsAboutInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutNotifsAboutInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutNotifiesInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutNotifiesInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutNotifiesInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutNotifiesInput, Prisma.MMapUncheckedCreateWithoutNotifiesInput>
}

export type MMapUpsertWithoutNotifiesInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutNotifiesInput, Prisma.MMapUncheckedUpdateWithoutNotifiesInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutNotifiesInput, Prisma.MMapUncheckedCreateWithoutNotifiesInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutNotifiesInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutNotifiesInput, Prisma.MMapUncheckedUpdateWithoutNotifiesInput>
}

export type MMapUpdateWithoutNotifiesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutNotifiesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutCurrentVersionInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutCurrentVersionInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutCurrentVersionInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
}

export type MMapCreateWithoutVersionsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutVersionsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutVersionsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutVersionsInput, Prisma.MMapUncheckedCreateWithoutVersionsInput>
}

export type MMapUpsertWithoutCurrentVersionInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutCurrentVersionInput, Prisma.MMapUncheckedUpdateWithoutCurrentVersionInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutCurrentVersionInput, Prisma.MMapUncheckedCreateWithoutCurrentVersionInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutCurrentVersionInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutCurrentVersionInput, Prisma.MMapUncheckedUpdateWithoutCurrentVersionInput>
}

export type MMapUpdateWithoutCurrentVersionInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutCurrentVersionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapUpsertWithoutVersionsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutVersionsInput, Prisma.MMapUncheckedUpdateWithoutVersionsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutVersionsInput, Prisma.MMapUncheckedCreateWithoutVersionsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutVersionsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutVersionsInput, Prisma.MMapUncheckedUpdateWithoutVersionsInput>
}

export type MMapUpdateWithoutVersionsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutVersionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutCreditsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutCreditsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutCreditsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutCreditsInput, Prisma.MMapUncheckedCreateWithoutCreditsInput>
}

export type MMapUpsertWithoutCreditsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutCreditsInput, Prisma.MMapUncheckedUpdateWithoutCreditsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutCreditsInput, Prisma.MMapUncheckedCreateWithoutCreditsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutCreditsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutCreditsInput, Prisma.MMapUncheckedUpdateWithoutCreditsInput>
}

export type MMapUpdateWithoutCreditsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutCreditsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutFavoritesInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutFavoritesInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutFavoritesInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutFavoritesInput, Prisma.MMapUncheckedCreateWithoutFavoritesInput>
}

export type MMapUpsertWithoutFavoritesInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutFavoritesInput, Prisma.MMapUncheckedUpdateWithoutFavoritesInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutFavoritesInput, Prisma.MMapUncheckedCreateWithoutFavoritesInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutFavoritesInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutFavoritesInput, Prisma.MMapUncheckedUpdateWithoutFavoritesInput>
}

export type MMapUpdateWithoutFavoritesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutFavoritesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutInfoInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutInfoInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutInfoInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutInfoInput, Prisma.MMapUncheckedCreateWithoutInfoInput>
}

export type MMapUpsertWithoutInfoInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutInfoInput, Prisma.MMapUncheckedUpdateWithoutInfoInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutInfoInput, Prisma.MMapUncheckedCreateWithoutInfoInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutInfoInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutInfoInput, Prisma.MMapUncheckedUpdateWithoutInfoInput>
}

export type MMapUpdateWithoutInfoInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutInfoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutStatsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutStatsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutStatsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutStatsInput, Prisma.MMapUncheckedCreateWithoutStatsInput>
}

export type MMapUpsertWithoutStatsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutStatsInput, Prisma.MMapUncheckedUpdateWithoutStatsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutStatsInput, Prisma.MMapUncheckedCreateWithoutStatsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutStatsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutStatsInput, Prisma.MMapUncheckedUpdateWithoutStatsInput>
}

export type MMapUpdateWithoutStatsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutStatsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutTestInvitesInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
}

export type MMapUncheckedCreateWithoutTestInvitesInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
}

export type MMapCreateOrConnectWithoutTestInvitesInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutTestInvitesInput, Prisma.MMapUncheckedCreateWithoutTestInvitesInput>
}

export type MMapUpsertWithoutTestInvitesInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutTestInvitesInput, Prisma.MMapUncheckedUpdateWithoutTestInvitesInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutTestInvitesInput, Prisma.MMapUncheckedCreateWithoutTestInvitesInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutTestInvitesInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutTestInvitesInput, Prisma.MMapUncheckedUpdateWithoutTestInvitesInput>
}

export type MMapUpdateWithoutTestInvitesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutTestInvitesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
}

export type MMapCreateWithoutSubmissionInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutSubmissionInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutSubmissionInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutSubmissionInput, Prisma.MMapUncheckedCreateWithoutSubmissionInput>
}

export type MMapUpsertWithoutSubmissionInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutSubmissionInput, Prisma.MMapUncheckedUpdateWithoutSubmissionInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutSubmissionInput, Prisma.MMapUncheckedCreateWithoutSubmissionInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutSubmissionInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutSubmissionInput, Prisma.MMapUncheckedUpdateWithoutSubmissionInput>
}

export type MMapUpdateWithoutSubmissionInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutSubmissionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutReviewsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutReviewsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutReviewsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutReviewsInput, Prisma.MMapUncheckedCreateWithoutReviewsInput>
}

export type MMapUpsertWithoutReviewsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutReviewsInput, Prisma.MMapUncheckedUpdateWithoutReviewsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutReviewsInput, Prisma.MMapUncheckedCreateWithoutReviewsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutReviewsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutReviewsInput, Prisma.MMapUncheckedUpdateWithoutReviewsInput>
}

export type MMapUpdateWithoutReviewsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutReviewsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutReviewStatsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutReviewStatsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutReviewStatsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutReviewStatsInput, Prisma.MMapUncheckedCreateWithoutReviewStatsInput>
}

export type MMapUpsertWithoutReviewStatsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutReviewStatsInput, Prisma.MMapUncheckedUpdateWithoutReviewStatsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutReviewStatsInput, Prisma.MMapUncheckedCreateWithoutReviewStatsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutReviewStatsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutReviewStatsInput, Prisma.MMapUncheckedUpdateWithoutReviewStatsInput>
}

export type MMapUpdateWithoutReviewStatsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutReviewStatsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutLeaderboardsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutLeaderboardsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutLeaderboardsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardsInput>
}

export type MMapUpsertWithoutLeaderboardsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutLeaderboardsInput, Prisma.MMapUncheckedUpdateWithoutLeaderboardsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutLeaderboardsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutLeaderboardsInput, Prisma.MMapUncheckedUpdateWithoutLeaderboardsInput>
}

export type MMapUpdateWithoutLeaderboardsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutLeaderboardsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutLeaderboardRunsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutLeaderboardRunsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  pastRuns?: Prisma.PastRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutLeaderboardRunsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardRunsInput>
}

export type MMapUpsertWithoutLeaderboardRunsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedUpdateWithoutLeaderboardRunsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedCreateWithoutLeaderboardRunsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutLeaderboardRunsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutLeaderboardRunsInput, Prisma.MMapUncheckedUpdateWithoutLeaderboardRunsInput>
}

export type MMapUpdateWithoutLeaderboardRunsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutLeaderboardRunsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateWithoutPastRunsInput = {
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string
  submitter?: Prisma.UserCreateNestedOneWithoutSubmittedMapsInput
  stats?: Prisma.MapStatsCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoCreateNestedOneWithoutMmapInput
  currentVersion?: Prisma.MapVersionCreateNestedOneWithoutCurrentVersionInput
  versions?: Prisma.MapVersionCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteCreateNestedManyWithoutMmapInput
}

export type MMapUncheckedCreateWithoutPastRunsInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  submitterID?: number | null
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  stats?: Prisma.MapStatsUncheckedCreateNestedOneWithoutMmapInput
  info?: Prisma.MapInfoUncheckedCreateNestedOneWithoutMmapInput
  versions?: Prisma.MapVersionUncheckedCreateNestedManyWithoutMmapInput
  leaderboards?: Prisma.LeaderboardUncheckedCreateNestedManyWithoutMmapInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedCreateNestedManyWithoutMmapInput
  credits?: Prisma.MapCreditUncheckedCreateNestedManyWithoutMmapInput
  favorites?: Prisma.MapFavoriteUncheckedCreateNestedManyWithoutMmapInput
  notifies?: Prisma.MapNotifyUncheckedCreateNestedManyWithoutMmapInput
  notifsAbout?: Prisma.NotificationUncheckedCreateNestedManyWithoutMapInput
  reviews?: Prisma.MapReviewUncheckedCreateNestedManyWithoutMmapInput
  reviewStats?: Prisma.MapReviewStatsUncheckedCreateNestedOneWithoutMmapInput
  submission?: Prisma.MapSubmissionUncheckedCreateNestedOneWithoutMmapInput
  testInvites?: Prisma.MapTestInviteUncheckedCreateNestedManyWithoutMmapInput
}

export type MMapCreateOrConnectWithoutPastRunsInput = {
  where: Prisma.MMapWhereUniqueInput
  create: Prisma.XOR<Prisma.MMapCreateWithoutPastRunsInput, Prisma.MMapUncheckedCreateWithoutPastRunsInput>
}

export type MMapUpsertWithoutPastRunsInput = {
  update: Prisma.XOR<Prisma.MMapUpdateWithoutPastRunsInput, Prisma.MMapUncheckedUpdateWithoutPastRunsInput>
  create: Prisma.XOR<Prisma.MMapCreateWithoutPastRunsInput, Prisma.MMapUncheckedCreateWithoutPastRunsInput>
  where?: Prisma.MMapWhereInput
}

export type MMapUpdateToOneWithWhereWithoutPastRunsInput = {
  where?: Prisma.MMapWhereInput
  data: Prisma.XOR<Prisma.MMapUpdateWithoutPastRunsInput, Prisma.MMapUncheckedUpdateWithoutPastRunsInput>
}

export type MMapUpdateWithoutPastRunsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submitter?: Prisma.UserUpdateOneWithoutSubmittedMapsNestedInput
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutPastRunsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  submitterID?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapCreateManySubmitterInput = {
  id?: number
  name: string
  status: number
  images?: Prisma.MMapCreateimagesInput | string[]
  currentVersionID?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MMapUpdateWithoutSubmitterInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUpdateOneWithoutMmapNestedInput
  currentVersion?: Prisma.MapVersionUpdateOneWithoutCurrentVersionNestedInput
  versions?: Prisma.MapVersionUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateWithoutSubmitterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  stats?: Prisma.MapStatsUncheckedUpdateOneWithoutMmapNestedInput
  info?: Prisma.MapInfoUncheckedUpdateOneWithoutMmapNestedInput
  versions?: Prisma.MapVersionUncheckedUpdateManyWithoutMmapNestedInput
  leaderboards?: Prisma.LeaderboardUncheckedUpdateManyWithoutMmapNestedInput
  leaderboardRuns?: Prisma.LeaderboardRunUncheckedUpdateManyWithoutMmapNestedInput
  pastRuns?: Prisma.PastRunUncheckedUpdateManyWithoutMmapNestedInput
  credits?: Prisma.MapCreditUncheckedUpdateManyWithoutMmapNestedInput
  favorites?: Prisma.MapFavoriteUncheckedUpdateManyWithoutMmapNestedInput
  notifies?: Prisma.MapNotifyUncheckedUpdateManyWithoutMmapNestedInput
  notifsAbout?: Prisma.NotificationUncheckedUpdateManyWithoutMapNestedInput
  reviews?: Prisma.MapReviewUncheckedUpdateManyWithoutMmapNestedInput
  reviewStats?: Prisma.MapReviewStatsUncheckedUpdateOneWithoutMmapNestedInput
  submission?: Prisma.MapSubmissionUncheckedUpdateOneWithoutMmapNestedInput
  testInvites?: Prisma.MapTestInviteUncheckedUpdateManyWithoutMmapNestedInput
}

export type MMapUncheckedUpdateManyWithoutSubmitterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  images?: Prisma.MMapUpdateimagesInput | string[]
  currentVersionID?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type MMapCountOutputType
 */

export type MMapCountOutputType = {
  versions: number
  leaderboards: number
  leaderboardRuns: number
  pastRuns: number
  credits: number
  favorites: number
  notifies: number
  notifsAbout: number
  reviews: number
  testInvites: number
}

export type MMapCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  versions?: boolean | MMapCountOutputTypeCountVersionsArgs
  leaderboards?: boolean | MMapCountOutputTypeCountLeaderboardsArgs
  leaderboardRuns?: boolean | MMapCountOutputTypeCountLeaderboardRunsArgs
  pastRuns?: boolean | MMapCountOutputTypeCountPastRunsArgs
  credits?: boolean | MMapCountOutputTypeCountCreditsArgs
  favorites?: boolean | MMapCountOutputTypeCountFavoritesArgs
  notifies?: boolean | MMapCountOutputTypeCountNotifiesArgs
  notifsAbout?: boolean | MMapCountOutputTypeCountNotifsAboutArgs
  reviews?: boolean | MMapCountOutputTypeCountReviewsArgs
  testInvites?: boolean | MMapCountOutputTypeCountTestInvitesArgs
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMapCountOutputType
   */
  select?: Prisma.MMapCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountVersionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapVersionWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountLeaderboardsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeaderboardWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountLeaderboardRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeaderboardRunWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountPastRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PastRunWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountCreditsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapCreditWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountFavoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapFavoriteWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountNotifiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapNotifyWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountNotifsAboutArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountReviewsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapReviewWhereInput
}

/**
 * MMapCountOutputType without action
 */
export type MMapCountOutputTypeCountTestInvitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MapTestInviteWhereInput
}


export type MMapSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  status?: boolean
  images?: boolean
  submitterID?: boolean
  currentVersionID?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  stats?: boolean | Prisma.MMap$statsArgs<ExtArgs>
  info?: boolean | Prisma.MMap$infoArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
  versions?: boolean | Prisma.MMap$versionsArgs<ExtArgs>
  leaderboards?: boolean | Prisma.MMap$leaderboardsArgs<ExtArgs>
  leaderboardRuns?: boolean | Prisma.MMap$leaderboardRunsArgs<ExtArgs>
  pastRuns?: boolean | Prisma.MMap$pastRunsArgs<ExtArgs>
  credits?: boolean | Prisma.MMap$creditsArgs<ExtArgs>
  favorites?: boolean | Prisma.MMap$favoritesArgs<ExtArgs>
  notifies?: boolean | Prisma.MMap$notifiesArgs<ExtArgs>
  notifsAbout?: boolean | Prisma.MMap$notifsAboutArgs<ExtArgs>
  reviews?: boolean | Prisma.MMap$reviewsArgs<ExtArgs>
  reviewStats?: boolean | Prisma.MMap$reviewStatsArgs<ExtArgs>
  submission?: boolean | Prisma.MMap$submissionArgs<ExtArgs>
  testInvites?: boolean | Prisma.MMap$testInvitesArgs<ExtArgs>
  _count?: boolean | Prisma.MMapCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mMap"]>

export type MMapSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  status?: boolean
  images?: boolean
  submitterID?: boolean
  currentVersionID?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
}, ExtArgs["result"]["mMap"]>

export type MMapSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  status?: boolean
  images?: boolean
  submitterID?: boolean
  currentVersionID?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
}, ExtArgs["result"]["mMap"]>

export type MMapSelectScalar = {
  id?: boolean
  name?: boolean
  status?: boolean
  images?: boolean
  submitterID?: boolean
  currentVersionID?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MMapOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "status" | "images" | "submitterID" | "currentVersionID" | "createdAt" | "updatedAt", ExtArgs["result"]["mMap"]>
export type MMapInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  stats?: boolean | Prisma.MMap$statsArgs<ExtArgs>
  info?: boolean | Prisma.MMap$infoArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
  versions?: boolean | Prisma.MMap$versionsArgs<ExtArgs>
  leaderboards?: boolean | Prisma.MMap$leaderboardsArgs<ExtArgs>
  leaderboardRuns?: boolean | Prisma.MMap$leaderboardRunsArgs<ExtArgs>
  pastRuns?: boolean | Prisma.MMap$pastRunsArgs<ExtArgs>
  credits?: boolean | Prisma.MMap$creditsArgs<ExtArgs>
  favorites?: boolean | Prisma.MMap$favoritesArgs<ExtArgs>
  notifies?: boolean | Prisma.MMap$notifiesArgs<ExtArgs>
  notifsAbout?: boolean | Prisma.MMap$notifsAboutArgs<ExtArgs>
  reviews?: boolean | Prisma.MMap$reviewsArgs<ExtArgs>
  reviewStats?: boolean | Prisma.MMap$reviewStatsArgs<ExtArgs>
  submission?: boolean | Prisma.MMap$submissionArgs<ExtArgs>
  testInvites?: boolean | Prisma.MMap$testInvitesArgs<ExtArgs>
  _count?: boolean | Prisma.MMapCountOutputTypeDefaultArgs<ExtArgs>
}
export type MMapIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
}
export type MMapIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  submitter?: boolean | Prisma.MMap$submitterArgs<ExtArgs>
  currentVersion?: boolean | Prisma.MMap$currentVersionArgs<ExtArgs>
}

export type $MMapPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MMap"
  objects: {
    submitter: Prisma.$UserPayload<ExtArgs> | null
    stats: Prisma.$MapStatsPayload<ExtArgs> | null
    info: Prisma.$MapInfoPayload<ExtArgs> | null
    currentVersion: Prisma.$MapVersionPayload<ExtArgs> | null
    versions: Prisma.$MapVersionPayload<ExtArgs>[]
    leaderboards: Prisma.$LeaderboardPayload<ExtArgs>[]
    leaderboardRuns: Prisma.$LeaderboardRunPayload<ExtArgs>[]
    pastRuns: Prisma.$PastRunPayload<ExtArgs>[]
    credits: Prisma.$MapCreditPayload<ExtArgs>[]
    favorites: Prisma.$MapFavoritePayload<ExtArgs>[]
    notifies: Prisma.$MapNotifyPayload<ExtArgs>[]
    notifsAbout: Prisma.$NotificationPayload<ExtArgs>[]
    reviews: Prisma.$MapReviewPayload<ExtArgs>[]
    reviewStats: Prisma.$MapReviewStatsPayload<ExtArgs> | null
    submission: Prisma.$MapSubmissionPayload<ExtArgs> | null
    testInvites: Prisma.$MapTestInvitePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    name: string
    /**
     * map-status.enum.ts
     */
    status: number
    images: string[]
    submitterID: number | null
    currentVersionID: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["mMap"]>
  composites: {}
}

export type MMapGetPayload<S extends boolean | null | undefined | MMapDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MMapPayload, S>

export type MMapCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MMapCountAggregateInputType | true
  }

export interface MMapDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MMap'], meta: { name: 'MMap' } }
  /**
   * Find zero or one MMap that matches the filter.
   * @param {MMapFindUniqueArgs} args - Arguments to find a MMap
   * @example
   * // Get one MMap
   * const mMap = await prisma.mMap.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MMapFindUniqueArgs>(args: Prisma.SelectSubset<T, MMapFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MMap that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MMapFindUniqueOrThrowArgs} args - Arguments to find a MMap
   * @example
   * // Get one MMap
   * const mMap = await prisma.mMap.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MMapFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MMap that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapFindFirstArgs} args - Arguments to find a MMap
   * @example
   * // Get one MMap
   * const mMap = await prisma.mMap.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MMapFindFirstArgs>(args?: Prisma.SelectSubset<T, MMapFindFirstArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MMap that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapFindFirstOrThrowArgs} args - Arguments to find a MMap
   * @example
   * // Get one MMap
   * const mMap = await prisma.mMap.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MMapFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MMapFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MMaps that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MMaps
   * const mMaps = await prisma.mMap.findMany()
   * 
   * // Get first 10 MMaps
   * const mMaps = await prisma.mMap.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mMapWithIdOnly = await prisma.mMap.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MMapFindManyArgs>(args?: Prisma.SelectSubset<T, MMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MMap.
   * @param {MMapCreateArgs} args - Arguments to create a MMap.
   * @example
   * // Create one MMap
   * const MMap = await prisma.mMap.create({
   *   data: {
   *     // ... data to create a MMap
   *   }
   * })
   * 
   */
  create<T extends MMapCreateArgs>(args: Prisma.SelectSubset<T, MMapCreateArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MMaps.
   * @param {MMapCreateManyArgs} args - Arguments to create many MMaps.
   * @example
   * // Create many MMaps
   * const mMap = await prisma.mMap.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MMapCreateManyArgs>(args?: Prisma.SelectSubset<T, MMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MMaps and returns the data saved in the database.
   * @param {MMapCreateManyAndReturnArgs} args - Arguments to create many MMaps.
   * @example
   * // Create many MMaps
   * const mMap = await prisma.mMap.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MMaps and only return the `id`
   * const mMapWithIdOnly = await prisma.mMap.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MMapCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MMapCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MMap.
   * @param {MMapDeleteArgs} args - Arguments to delete one MMap.
   * @example
   * // Delete one MMap
   * const MMap = await prisma.mMap.delete({
   *   where: {
   *     // ... filter to delete one MMap
   *   }
   * })
   * 
   */
  delete<T extends MMapDeleteArgs>(args: Prisma.SelectSubset<T, MMapDeleteArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MMap.
   * @param {MMapUpdateArgs} args - Arguments to update one MMap.
   * @example
   * // Update one MMap
   * const mMap = await prisma.mMap.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MMapUpdateArgs>(args: Prisma.SelectSubset<T, MMapUpdateArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MMaps.
   * @param {MMapDeleteManyArgs} args - Arguments to filter MMaps to delete.
   * @example
   * // Delete a few MMaps
   * const { count } = await prisma.mMap.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MMapDeleteManyArgs>(args?: Prisma.SelectSubset<T, MMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MMaps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MMaps
   * const mMap = await prisma.mMap.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MMapUpdateManyArgs>(args: Prisma.SelectSubset<T, MMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MMaps and returns the data updated in the database.
   * @param {MMapUpdateManyAndReturnArgs} args - Arguments to update many MMaps.
   * @example
   * // Update many MMaps
   * const mMap = await prisma.mMap.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MMaps and only return the `id`
   * const mMapWithIdOnly = await prisma.mMap.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MMapUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MMapUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MMap.
   * @param {MMapUpsertArgs} args - Arguments to update or create a MMap.
   * @example
   * // Update or create a MMap
   * const mMap = await prisma.mMap.upsert({
   *   create: {
   *     // ... data to create a MMap
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MMap we want to update
   *   }
   * })
   */
  upsert<T extends MMapUpsertArgs>(args: Prisma.SelectSubset<T, MMapUpsertArgs<ExtArgs>>): Prisma.Prisma__MMapClient<runtime.Types.Result.GetResult<Prisma.$MMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MMaps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapCountArgs} args - Arguments to filter MMaps to count.
   * @example
   * // Count the number of MMaps
   * const count = await prisma.mMap.count({
   *   where: {
   *     // ... the filter for the MMaps we want to count
   *   }
   * })
  **/
  count<T extends MMapCountArgs>(
    args?: Prisma.Subset<T, MMapCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MMapCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MMap.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MMapAggregateArgs>(args: Prisma.Subset<T, MMapAggregateArgs>): Prisma.PrismaPromise<GetMMapAggregateType<T>>

  /**
   * Group by MMap.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MMapGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MMapGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MMapGroupByArgs['orderBy'] }
      : { orderBy?: MMapGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MMap model
 */
readonly fields: MMapFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MMap.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MMapClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  submitter<T extends Prisma.MMap$submitterArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$submitterArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  stats<T extends Prisma.MMap$statsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$statsArgs<ExtArgs>>): Prisma.Prisma__MapStatsClient<runtime.Types.Result.GetResult<Prisma.$MapStatsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  info<T extends Prisma.MMap$infoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$infoArgs<ExtArgs>>): Prisma.Prisma__MapInfoClient<runtime.Types.Result.GetResult<Prisma.$MapInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  currentVersion<T extends Prisma.MMap$currentVersionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$currentVersionArgs<ExtArgs>>): Prisma.Prisma__MapVersionClient<runtime.Types.Result.GetResult<Prisma.$MapVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  versions<T extends Prisma.MMap$versionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$versionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaderboards<T extends Prisma.MMap$leaderboardsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$leaderboardsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaderboardPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  leaderboardRuns<T extends Prisma.MMap$leaderboardRunsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$leaderboardRunsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeaderboardRunPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  pastRuns<T extends Prisma.MMap$pastRunsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$pastRunsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PastRunPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  credits<T extends Prisma.MMap$creditsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$creditsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapCreditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  favorites<T extends Prisma.MMap$favoritesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapFavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifies<T extends Prisma.MMap$notifiesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$notifiesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapNotifyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifsAbout<T extends Prisma.MMap$notifsAboutArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$notifsAboutArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviews<T extends Prisma.MMap$reviewsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewStats<T extends Prisma.MMap$reviewStatsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$reviewStatsArgs<ExtArgs>>): Prisma.Prisma__MapReviewStatsClient<runtime.Types.Result.GetResult<Prisma.$MapReviewStatsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  submission<T extends Prisma.MMap$submissionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$submissionArgs<ExtArgs>>): Prisma.Prisma__MapSubmissionClient<runtime.Types.Result.GetResult<Prisma.$MapSubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  testInvites<T extends Prisma.MMap$testInvitesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MMap$testInvitesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MapTestInvitePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MMap model
 */
export interface MMapFieldRefs {
  readonly id: Prisma.FieldRef<"MMap", 'Int'>
  readonly name: Prisma.FieldRef<"MMap", 'String'>
  readonly status: Prisma.FieldRef<"MMap", 'Int'>
  readonly images: Prisma.FieldRef<"MMap", 'String[]'>
  readonly submitterID: Prisma.FieldRef<"MMap", 'Int'>
  readonly currentVersionID: Prisma.FieldRef<"MMap", 'String'>
  readonly createdAt: Prisma.FieldRef<"MMap", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"MMap", 'DateTime'>
}
    

// Custom InputTypes
/**
 * MMap findUnique
 */
export type MMapFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter, which MMap to fetch.
   */
  where: Prisma.MMapWhereUniqueInput
}

/**
 * MMap findUniqueOrThrow
 */
export type MMapFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter, which MMap to fetch.
   */
  where: Prisma.MMapWhereUniqueInput
}

/**
 * MMap findFirst
 */
export type MMapFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter, which MMap to fetch.
   */
  where?: Prisma.MMapWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MMaps to fetch.
   */
  orderBy?: Prisma.MMapOrderByWithRelationInput | Prisma.MMapOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MMaps.
   */
  cursor?: Prisma.MMapWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MMaps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MMaps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MMaps.
   */
  distinct?: Prisma.MMapScalarFieldEnum | Prisma.MMapScalarFieldEnum[]
}

/**
 * MMap findFirstOrThrow
 */
export type MMapFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter, which MMap to fetch.
   */
  where?: Prisma.MMapWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MMaps to fetch.
   */
  orderBy?: Prisma.MMapOrderByWithRelationInput | Prisma.MMapOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MMaps.
   */
  cursor?: Prisma.MMapWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MMaps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MMaps.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MMaps.
   */
  distinct?: Prisma.MMapScalarFieldEnum | Prisma.MMapScalarFieldEnum[]
}

/**
 * MMap findMany
 */
export type MMapFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter, which MMaps to fetch.
   */
  where?: Prisma.MMapWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MMaps to fetch.
   */
  orderBy?: Prisma.MMapOrderByWithRelationInput | Prisma.MMapOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MMaps.
   */
  cursor?: Prisma.MMapWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MMaps from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MMaps.
   */
  skip?: number
  distinct?: Prisma.MMapScalarFieldEnum | Prisma.MMapScalarFieldEnum[]
}

/**
 * MMap create
 */
export type MMapCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * The data needed to create a MMap.
   */
  data: Prisma.XOR<Prisma.MMapCreateInput, Prisma.MMapUncheckedCreateInput>
}

/**
 * MMap createMany
 */
export type MMapCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MMaps.
   */
  data: Prisma.MMapCreateManyInput | Prisma.MMapCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * MMap createManyAndReturn
 */
export type MMapCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * The data used to create many MMaps.
   */
  data: Prisma.MMapCreateManyInput | Prisma.MMapCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * MMap update
 */
export type MMapUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * The data needed to update a MMap.
   */
  data: Prisma.XOR<Prisma.MMapUpdateInput, Prisma.MMapUncheckedUpdateInput>
  /**
   * Choose, which MMap to update.
   */
  where: Prisma.MMapWhereUniqueInput
}

/**
 * MMap updateMany
 */
export type MMapUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MMaps.
   */
  data: Prisma.XOR<Prisma.MMapUpdateManyMutationInput, Prisma.MMapUncheckedUpdateManyInput>
  /**
   * Filter which MMaps to update
   */
  where?: Prisma.MMapWhereInput
  /**
   * Limit how many MMaps to update.
   */
  limit?: number
}

/**
 * MMap updateManyAndReturn
 */
export type MMapUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * The data used to update MMaps.
   */
  data: Prisma.XOR<Prisma.MMapUpdateManyMutationInput, Prisma.MMapUncheckedUpdateManyInput>
  /**
   * Filter which MMaps to update
   */
  where?: Prisma.MMapWhereInput
  /**
   * Limit how many MMaps to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * MMap upsert
 */
export type MMapUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * The filter to search for the MMap to update in case it exists.
   */
  where: Prisma.MMapWhereUniqueInput
  /**
   * In case the MMap found by the `where` argument doesn't exist, create a new MMap with this data.
   */
  create: Prisma.XOR<Prisma.MMapCreateInput, Prisma.MMapUncheckedCreateInput>
  /**
   * In case the MMap was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MMapUpdateInput, Prisma.MMapUncheckedUpdateInput>
}

/**
 * MMap delete
 */
export type MMapDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
  /**
   * Filter which MMap to delete.
   */
  where: Prisma.MMapWhereUniqueInput
}

/**
 * MMap deleteMany
 */
export type MMapDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MMaps to delete
   */
  where?: Prisma.MMapWhereInput
  /**
   * Limit how many MMaps to delete.
   */
  limit?: number
}

/**
 * MMap.submitter
 */
export type MMap$submitterArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * MMap.stats
 */
export type MMap$statsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapStats
   */
  select?: Prisma.MapStatsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapStats
   */
  omit?: Prisma.MapStatsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapStatsInclude<ExtArgs> | null
  where?: Prisma.MapStatsWhereInput
}

/**
 * MMap.info
 */
export type MMap$infoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapInfo
   */
  select?: Prisma.MapInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapInfo
   */
  omit?: Prisma.MapInfoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapInfoInclude<ExtArgs> | null
  where?: Prisma.MapInfoWhereInput
}

/**
 * MMap.currentVersion
 */
export type MMap$currentVersionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapVersion
   */
  select?: Prisma.MapVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapVersion
   */
  omit?: Prisma.MapVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapVersionInclude<ExtArgs> | null
  where?: Prisma.MapVersionWhereInput
}

/**
 * MMap.versions
 */
export type MMap$versionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapVersion
   */
  select?: Prisma.MapVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapVersion
   */
  omit?: Prisma.MapVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapVersionInclude<ExtArgs> | null
  where?: Prisma.MapVersionWhereInput
  orderBy?: Prisma.MapVersionOrderByWithRelationInput | Prisma.MapVersionOrderByWithRelationInput[]
  cursor?: Prisma.MapVersionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapVersionScalarFieldEnum | Prisma.MapVersionScalarFieldEnum[]
}

/**
 * MMap.leaderboards
 */
export type MMap$leaderboardsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Leaderboard
   */
  select?: Prisma.LeaderboardSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Leaderboard
   */
  omit?: Prisma.LeaderboardOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaderboardInclude<ExtArgs> | null
  where?: Prisma.LeaderboardWhereInput
  orderBy?: Prisma.LeaderboardOrderByWithRelationInput | Prisma.LeaderboardOrderByWithRelationInput[]
  cursor?: Prisma.LeaderboardWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaderboardScalarFieldEnum | Prisma.LeaderboardScalarFieldEnum[]
}

/**
 * MMap.leaderboardRuns
 */
export type MMap$leaderboardRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LeaderboardRun
   */
  select?: Prisma.LeaderboardRunSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LeaderboardRun
   */
  omit?: Prisma.LeaderboardRunOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeaderboardRunInclude<ExtArgs> | null
  where?: Prisma.LeaderboardRunWhereInput
  orderBy?: Prisma.LeaderboardRunOrderByWithRelationInput | Prisma.LeaderboardRunOrderByWithRelationInput[]
  cursor?: Prisma.LeaderboardRunWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LeaderboardRunScalarFieldEnum | Prisma.LeaderboardRunScalarFieldEnum[]
}

/**
 * MMap.pastRuns
 */
export type MMap$pastRunsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PastRun
   */
  select?: Prisma.PastRunSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PastRun
   */
  omit?: Prisma.PastRunOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PastRunInclude<ExtArgs> | null
  where?: Prisma.PastRunWhereInput
  orderBy?: Prisma.PastRunOrderByWithRelationInput | Prisma.PastRunOrderByWithRelationInput[]
  cursor?: Prisma.PastRunWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PastRunScalarFieldEnum | Prisma.PastRunScalarFieldEnum[]
}

/**
 * MMap.credits
 */
export type MMap$creditsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapCredit
   */
  select?: Prisma.MapCreditSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapCredit
   */
  omit?: Prisma.MapCreditOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapCreditInclude<ExtArgs> | null
  where?: Prisma.MapCreditWhereInput
  orderBy?: Prisma.MapCreditOrderByWithRelationInput | Prisma.MapCreditOrderByWithRelationInput[]
  cursor?: Prisma.MapCreditWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapCreditScalarFieldEnum | Prisma.MapCreditScalarFieldEnum[]
}

/**
 * MMap.favorites
 */
export type MMap$favoritesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapFavorite
   */
  select?: Prisma.MapFavoriteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapFavorite
   */
  omit?: Prisma.MapFavoriteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapFavoriteInclude<ExtArgs> | null
  where?: Prisma.MapFavoriteWhereInput
  orderBy?: Prisma.MapFavoriteOrderByWithRelationInput | Prisma.MapFavoriteOrderByWithRelationInput[]
  cursor?: Prisma.MapFavoriteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapFavoriteScalarFieldEnum | Prisma.MapFavoriteScalarFieldEnum[]
}

/**
 * MMap.notifies
 */
export type MMap$notifiesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapNotify
   */
  select?: Prisma.MapNotifySelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapNotify
   */
  omit?: Prisma.MapNotifyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapNotifyInclude<ExtArgs> | null
  where?: Prisma.MapNotifyWhereInput
  orderBy?: Prisma.MapNotifyOrderByWithRelationInput | Prisma.MapNotifyOrderByWithRelationInput[]
  cursor?: Prisma.MapNotifyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapNotifyScalarFieldEnum | Prisma.MapNotifyScalarFieldEnum[]
}

/**
 * MMap.notifsAbout
 */
export type MMap$notifsAboutArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * MMap.reviews
 */
export type MMap$reviewsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapReview
   */
  select?: Prisma.MapReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapReview
   */
  omit?: Prisma.MapReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapReviewInclude<ExtArgs> | null
  where?: Prisma.MapReviewWhereInput
  orderBy?: Prisma.MapReviewOrderByWithRelationInput | Prisma.MapReviewOrderByWithRelationInput[]
  cursor?: Prisma.MapReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapReviewScalarFieldEnum | Prisma.MapReviewScalarFieldEnum[]
}

/**
 * MMap.reviewStats
 */
export type MMap$reviewStatsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapReviewStats
   */
  select?: Prisma.MapReviewStatsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapReviewStats
   */
  omit?: Prisma.MapReviewStatsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapReviewStatsInclude<ExtArgs> | null
  where?: Prisma.MapReviewStatsWhereInput
}

/**
 * MMap.submission
 */
export type MMap$submissionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapSubmission
   */
  select?: Prisma.MapSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapSubmission
   */
  omit?: Prisma.MapSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapSubmissionInclude<ExtArgs> | null
  where?: Prisma.MapSubmissionWhereInput
}

/**
 * MMap.testInvites
 */
export type MMap$testInvitesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MapTestInvite
   */
  select?: Prisma.MapTestInviteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MapTestInvite
   */
  omit?: Prisma.MapTestInviteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MapTestInviteInclude<ExtArgs> | null
  where?: Prisma.MapTestInviteWhereInput
  orderBy?: Prisma.MapTestInviteOrderByWithRelationInput | Prisma.MapTestInviteOrderByWithRelationInput[]
  cursor?: Prisma.MapTestInviteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MapTestInviteScalarFieldEnum | Prisma.MapTestInviteScalarFieldEnum[]
}

/**
 * MMap without action
 */
export type MMapDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MMap
   */
  select?: Prisma.MMapSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MMap
   */
  omit?: Prisma.MMapOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MMapInclude<ExtArgs> | null
}
