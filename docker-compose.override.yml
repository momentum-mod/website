version: '3.4'

services:
  nginx:
    image: nginx
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - ${USERPROFILE}/.aspnet/https:/etc/ssl
    ports:
      - "80"
      - "443"
    depends_on:
      - clientservice
    container_name: NginxGateway
  postgres:
    image: postgres
    env_file:
      - env/PostgresDatabase.env
    container_name: PostgresDatabase
  clientservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - angularfrontend
  angularfrontend:
    image: ${DOCKER_REGISTRY-}angularfrontend
    build:
      context: .
      dockerfile: src/ClientService/ClientApp/Dockerfile
    container_name: AngularFrontend
    volumes:
      - "./src/ClientService/ClientApp:/app"
  authenticationservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    env_file:
      - env/AuthenticationService.env
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
