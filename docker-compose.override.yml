version: "3.8"

services:
  minio:
    image: minio/minio
    container_name: MinIO
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    expose:
      - 9000
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SITE_REGION: ${STORAGE_REGION}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3
  createbuckets:
    image: minio/mc
    container_name: MinIO_CreateBuckets
    depends_on:
      - minio
    # If you want to clear the bucket, add the following line before the "mb myminio/momentum" command:
    # /usr/bin/mc rm -r --force myminio/momentum;
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set momentum_minio http://minio:9000 ${MINIO_ROOT_USER} minio123;
      /usr/bin/mc admin user add momentum_minio ${STORAGE_ACCESS_KEY_ID} ${STORAGE_SECRET_ACCESS_KEY};
      /usr/bin/mc mb --ignore-existing momentum_minio/${STORAGE_BUCKET_NAME} --region ${STORAGE_REGION};
      /usr/bin/mc anonymous set download momentum_minio/${STORAGE_BUCKET_NAME};
      /usr/bin/mc admin policy set momentum_minio readwrite user=${STORAGE_ACCESS_KEY_ID};
      exit 0;
      "
  db:
    platform: linux/x86_64
    volumes:
      - /var/lib/mysql
    env_file:
      - .env
  api:
    depends_on:
      - minio
    profiles:
      - full
    env_file:
      - .env
    environment:
      IS_DOCKERIZED_API: "true"
      DATABASE_URL: "mysql://root:${MYSQL_ROOT_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}?schema=public"
    platform: linux/x86_64
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - /app/server/node_modules/
    ports:
      - "9229:9229" # Expose for NodeJS debugging
    build:
      context: ./
      dockerfile: dev.Dockerfile
    command: npm run ${CMD:-start:push:debug}
