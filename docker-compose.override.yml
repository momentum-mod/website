version: "3.8"

services:
  minio:
    image: minio/minio
    container_name: MinIO
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    expose:
      - 9000
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_SITE_REGION: ${STORAGE_REGION}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3
  createbuckets:
    image: minio/mc
    container_name: MinIO_CreateBuckets
    depends_on:
      - minio
    # If you want to clear the bucket, add the following line before the
    # "mb myminio/momentum" command:
    # /usr/bin/mc rm -r --force momentum_minio/momtest;
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set momentum_minio http://minio:9000 minio minio123;
      /usr/bin/mc mb momentum_minio/momtest --ignore-existing;
      /usr/bin/mc anonymous set public momentum_minio/momtest;"
  db:
    platform: linux/x86_64
    env_file:
      - .env
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  # Here we use the profiles feature to only load the API with Docker if
  # launching with `--profile full`. This allows developers choose between
  # running the Nest API in Docker (great for frontend-only dev) and running
  # it natively, using a single command line option. Note we must construct
  # the DATABASE_URL from other env variables in this mode, overriding whatever
  # is in .env - we want to name it `db` in full mode  so it's only exposed to
  # the internal network.
  api:
    platform: linux/x86_64
    image: node:18
    depends_on:
      - minio
    profiles:
      - full
    env_file:
      - .env
    environment:
      IS_DOCKERIZED_API: "true"
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?schema=public
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - /app/server/node_modules/
    ports:
      - "9229:9229" # For Node debugging
      - ${NODE_PORT}:${NODE_PORT}
    expose:
      - ${NODE_PORT}
    command: >
      sh -c "npm install &&
      npm run ${CMD:-start:push}"
