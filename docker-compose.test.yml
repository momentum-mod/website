version: '3.8'

services:
  db:
    platform: linux/x86_64
    expose:
      - 5432
    ports:
      - '5432:5432'
    env_file:
      - .env.test
  minio:
    image: minio/minio
    container_name: MinIO
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    expose:
      - 9000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 5s
      timeout: 20s
      retries: 3
    env_file:
      - .env.test
  createbuckets:
    image: minio/mc
    container_name: MinIO_CreateBuckets
    depends_on:
      - minio
    entrypoint: >
      bash -c "
        mc alias set momentum_minio http://minio:9000 minio minio123 &&
        mc mb momentum_minio/momtest --ignore-existing &&
        mc anonymous set public momentum_minio/momtest
      "
  backend-e2e:
    platform: linux/x86_64
    # If we used `node-alpine` here we'd need to redownload our node_modules,
    # as some binaries are slightly different. About the same bandwidth for that
    # as to download the larger (Debian based) `node` image, and that's a bit
    # simpler.
    image: node:18.16.1
    depends_on:
      - minio
      - db
      - createbuckets
    env_file:
      - .env.test
    working_dir: /app/
    volumes:
      - ./:/app/
    ports:
      - '3003'
    command: >
      sh -c "
        npx nx run db:push &&
        npx nx run backend-e2e:e2e
      "
  frontend-e2e:
    platform: linux/x86_64
    image: cypress/base:18.16.0
    depends_on:
      - minio
      - db
      - createbuckets
    env_file:
      - .env.test
    working_dir: /app/
    volumes:
      - ./:/app/
    ports:
      - '3003'
    command: >
      sh -c "
        ./node_modules/.bin/cypress install &&
        npx nx run db:push &&
        npx nx run frontend-e2e:e2e
      "
