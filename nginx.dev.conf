worker_processes 1;

events { worker_connections 1024; }

http {
  # Define as 'upstream <nginx name>' , then 'server <docker compose service name>'
  upstream client { server clientservice; }
  upstream authentication { server authenticationservice; }
  
  map $http_host $port {
    default 80;
    "~^[^\:]+:(?<p>\d+)$" $p;
  }
  
  server {
    listen 80;
    listen 443 ssl;

    ssl_certificate /etc/ssl/momentum_localhost.crt;
    ssl_certificate_key /etc/ssl/momentum_localhost.key;    

    default_type text/plain;
  
    location /auth {
      proxy_pass         http://authentication;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection keep-alive;
      proxy_set_header   Host $host:$port;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }
    
    location / {
      proxy_pass         http://client;
      # enable WebSockets
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "upgrade";
	  proxy_set_header   Host $host:$port;
	  proxy_cache_bypass $http_upgrade;
	  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header   X-Forwarded-Proto $scheme;
    }
  }
}