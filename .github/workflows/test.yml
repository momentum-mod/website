name: Tests and Linting

on:
  pull_request:
    branches:
      - staging
      - nestJS # TODO: Remove when done
    paths-ignore:
      - "**.md"

# TODO: Client stuff will need upgrading when NestJS rewrite is completed.
jobs:
#  client-lint:
#    name: Client Lint
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Get specific changed files
#        id: changed-files-specific
#        uses: tj-actions/changed-files@v12
#        with:
#          files: client\/.*\.(js|ts|scss|html)$
#
#      - name: Setup Node
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        uses: actions/setup-node@v1
#        with:
#          node-version: "12.x"
#
#      - name: Resolve Yarn Cache Directory
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#
#      - name: Cache Yarn Cache Directory
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('./client/yarn.lock') }}
#          restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-
#
#      - name: Run Lint
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        run: |
#          cd ./client/
#          npm install -g @angular/cli && yarn install --prefer-offline
#          npm run lint:ci
#
#  client-tests:
#    name: Client Tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Get specific changed files
#        id: changed-files-specific
#        uses: tj-actions/changed-files@v12
#        with:
#          files: .(ts)$
#
#      - name: Setup Node
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        uses: actions/setup-node@v1
#        with:
#          node-version: "12.x"
#
#      - name: Resolve Yarn Cache Directory
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#
#      - name: Cache Yarn Cache Directory
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('./client/yarn.lock') }}
#          restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-
#
#      - name: Run Tests
#        if: steps.changed-files-specific.outputs.any_changed == 'true'
#        run: |
#          cd ./client/
#          npm install -g @angular/cli && yarn install --prefer-offline
#          npm run test
#          
  backend-lint:
    name: Backend Lint/Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install packages
        working-directory: server
        run: npm install

      - name: Prettier
        working-directory: server
        run: npm run format:check

      - name: ESLint
        working-directory: server
        run: npm run lint:check

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: server/**/*.{ts,js,prisma}

      - name: Execute tests
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --build --exit-code-from api
